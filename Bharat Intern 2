
{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": []
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "source": [
        "\n",
        "# **BHARAT INTERN TASK-1**\n",
        "## **STOCK PREDICTION**\n",
        "\n",
        "### **BY - MOUSOOMI SHIT**\n",
        "\n",
        "\n",
        "\n",
        "**USING THE TESLA STOCK DATASET AND PREDICTING THE PRICES USING LSTM**"
      ],
      "metadata": {
        "id": "RR5SRku07m17"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 1,
      "metadata": {
        "id": "ByAv07_cnK4V"
      },
      "outputs": [],
      "source": [
        "import pandas as pd\n",
        "import numpy as np\n",
        "import math\n",
        "import seaborn as sns\n",
        "import matplotlib.pyplot as plt\n",
        "from sklearn.preprocessing import MinMaxScaler\n",
        "from sklearn.metrics import mean_squared_error\n",
        "import tensorflow as tf\n",
        "from tensorflow.python.keras.models import Sequential\n",
        "from tensorflow.python.keras.layers import Dense\n",
        "from tensorflow.python.keras.layers import LSTM\n",
        "%matplotlib inline\n",
        "from warnings import filterwarnings\n",
        "filterwarnings(\"ignore\")"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df=pd.read_csv(r\"TSLA.csv\")\n",
        "print(\"Data imported successfully\")\n",
        "df.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 223
        },
        "id": "FDnBE8gDnRbG",
        "outputId": "7f41cdcb-ba79-46ff-c811-715682e93002"
      },
      "execution_count": 89,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Data imported successfully\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "         Date       Open   High        Low      Close  Adj Close    Volume\n",
              "0  2010-06-29  19.000000  25.00  17.540001  23.889999  23.889999  18766300\n",
              "1  2010-06-30  25.790001  30.42  23.299999  23.830000  23.830000  17187100\n",
              "2  2010-07-01  25.000000  25.92  20.270000  21.959999  21.959999   8218800\n",
              "3  2010-07-02  23.000000  23.10  18.709999  19.200001  19.200001   5139800\n",
              "4  2010-07-06  20.000000  20.00  15.830000  16.110001  16.110001   6866900"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-3d3fb6f1-36a7-43cf-b624-7681c2e0f3e8\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Date</th>\n",
              "      <th>Open</th>\n",
              "      <th>High</th>\n",
              "      <th>Low</th>\n",
              "      <th>Close</th>\n",
              "      <th>Adj Close</th>\n",
              "      <th>Volume</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2010-06-29</td>\n",
              "      <td>19.000000</td>\n",
              "      <td>25.00</td>\n",
              "      <td>17.540001</td>\n",
              "      <td>23.889999</td>\n",
              "      <td>23.889999</td>\n",
              "      <td>18766300</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2010-06-30</td>\n",
              "      <td>25.790001</td>\n",
              "      <td>30.42</td>\n",
              "      <td>23.299999</td>\n",
              "      <td>23.830000</td>\n",
              "      <td>23.830000</td>\n",
              "      <td>17187100</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2010-07-01</td>\n",
              "      <td>25.000000</td>\n",
              "      <td>25.92</td>\n",
              "      <td>20.270000</td>\n",
              "      <td>21.959999</td>\n",
              "      <td>21.959999</td>\n",
              "      <td>8218800</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2010-07-02</td>\n",
              "      <td>23.000000</td>\n",
              "      <td>23.10</td>\n",
              "      <td>18.709999</td>\n",
              "      <td>19.200001</td>\n",
              "      <td>19.200001</td>\n",
              "      <td>5139800</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2010-07-06</td>\n",
              "      <td>20.000000</td>\n",
              "      <td>20.00</td>\n",
              "      <td>15.830000</td>\n",
              "      <td>16.110001</td>\n",
              "      <td>16.110001</td>\n",
              "      <td>6866900</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3d3fb6f1-36a7-43cf-b624-7681c2e0f3e8')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-3d3fb6f1-36a7-43cf-b624-7681c2e0f3e8 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-3d3fb6f1-36a7-43cf-b624-7681c2e0f3e8');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-a9789b9a-d025-493c-b5c4-15cf89efc6f6\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a9789b9a-d025-493c-b5c4-15cf89efc6f6')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "    background-color: #E8F0FE;\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: #1967D2;\n",
              "    height: 32px;\n",
              "    padding: 0 0 0 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: #E2EBFA;\n",
              "    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: #174EA6;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "    background-color: #3B4455;\n",
              "    fill: #D2E3FC;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart:hover {\n",
              "    background-color: #434B5C;\n",
              "    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "    fill: #FFFFFF;\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const charts = await google.colab.kernel.invokeFunction(\n",
              "          'suggestCharts', [key], {});\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-a9789b9a-d025-493c-b5c4-15cf89efc6f6 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 89
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Oi-Ysz-HnZrT",
        "outputId": "936933be-414d-4813-a7b5-463cce450b95"
      },
      "execution_count": 90,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(2416, 7)"
            ]
          },
          "metadata": {},
          "execution_count": 90
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Gathering information about the data**"
      ],
      "metadata": {
        "id": "URjPf4Mu938e"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df.info()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "TYst5_G9ndHU",
        "outputId": "3bee6e1f-2775-4b26-84bc-de62038da9b4"
      },
      "execution_count": 91,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 2416 entries, 0 to 2415\n",
            "Data columns (total 7 columns):\n",
            " #   Column     Non-Null Count  Dtype  \n",
            "---  ------     --------------  -----  \n",
            " 0   Date       2416 non-null   object \n",
            " 1   Open       2416 non-null   float64\n",
            " 2   High       2416 non-null   float64\n",
            " 3   Low        2416 non-null   float64\n",
            " 4   Close      2416 non-null   float64\n",
            " 5   Adj Close  2416 non-null   float64\n",
            " 6   Volume     2416 non-null   int64  \n",
            "dtypes: float64(5), int64(1), object(1)\n",
            "memory usage: 132.2+ KB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.describe()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 300
        },
        "id": "Gpnualpang7D",
        "outputId": "173cba91-1108-4e06-ca95-3596af6c54b1"
      },
      "execution_count": 92,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "              Open         High          Low        Close    Adj Close  \\\n",
              "count  2416.000000  2416.000000  2416.000000  2416.000000  2416.000000   \n",
              "mean    186.271147   189.578224   182.916639   186.403651   186.403651   \n",
              "std     118.740163   120.892329   116.857591   119.136020   119.136020   \n",
              "min      16.139999    16.629999    14.980000    15.800000    15.800000   \n",
              "25%      34.342498    34.897501    33.587501    34.400002    34.400002   \n",
              "50%     213.035004   216.745002   208.870002   212.960007   212.960007   \n",
              "75%     266.450012   270.927513   262.102501   266.774994   266.774994   \n",
              "max     673.690002   786.140015   673.520020   780.000000   780.000000   \n",
              "\n",
              "             Volume  \n",
              "count  2.416000e+03  \n",
              "mean   5.572722e+06  \n",
              "std    4.987809e+06  \n",
              "min    1.185000e+05  \n",
              "25%    1.899275e+06  \n",
              "50%    4.578400e+06  \n",
              "75%    7.361150e+06  \n",
              "max    4.706500e+07  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-cb8a5f46-e511-4834-be39-81ff8c5cf102\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Open</th>\n",
              "      <th>High</th>\n",
              "      <th>Low</th>\n",
              "      <th>Close</th>\n",
              "      <th>Adj Close</th>\n",
              "      <th>Volume</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>2416.000000</td>\n",
              "      <td>2416.000000</td>\n",
              "      <td>2416.000000</td>\n",
              "      <td>2416.000000</td>\n",
              "      <td>2416.000000</td>\n",
              "      <td>2.416000e+03</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>186.271147</td>\n",
              "      <td>189.578224</td>\n",
              "      <td>182.916639</td>\n",
              "      <td>186.403651</td>\n",
              "      <td>186.403651</td>\n",
              "      <td>5.572722e+06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>118.740163</td>\n",
              "      <td>120.892329</td>\n",
              "      <td>116.857591</td>\n",
              "      <td>119.136020</td>\n",
              "      <td>119.136020</td>\n",
              "      <td>4.987809e+06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>16.139999</td>\n",
              "      <td>16.629999</td>\n",
              "      <td>14.980000</td>\n",
              "      <td>15.800000</td>\n",
              "      <td>15.800000</td>\n",
              "      <td>1.185000e+05</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>34.342498</td>\n",
              "      <td>34.897501</td>\n",
              "      <td>33.587501</td>\n",
              "      <td>34.400002</td>\n",
              "      <td>34.400002</td>\n",
              "      <td>1.899275e+06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>213.035004</td>\n",
              "      <td>216.745002</td>\n",
              "      <td>208.870002</td>\n",
              "      <td>212.960007</td>\n",
              "      <td>212.960007</td>\n",
              "      <td>4.578400e+06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>266.450012</td>\n",
              "      <td>270.927513</td>\n",
              "      <td>262.102501</td>\n",
              "      <td>266.774994</td>\n",
              "      <td>266.774994</td>\n",
              "      <td>7.361150e+06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>673.690002</td>\n",
              "      <td>786.140015</td>\n",
              "      <td>673.520020</td>\n",
              "      <td>780.000000</td>\n",
              "      <td>780.000000</td>\n",
              "      <td>4.706500e+07</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-cb8a5f46-e511-4834-be39-81ff8c5cf102')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-cb8a5f46-e511-4834-be39-81ff8c5cf102 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-cb8a5f46-e511-4834-be39-81ff8c5cf102');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-76379af8-8ecc-42fb-b4e7-efe25ce0883d\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-76379af8-8ecc-42fb-b4e7-efe25ce0883d')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "    background-color: #E8F0FE;\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: #1967D2;\n",
              "    height: 32px;\n",
              "    padding: 0 0 0 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: #E2EBFA;\n",
              "    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: #174EA6;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "    background-color: #3B4455;\n",
              "    fill: #D2E3FC;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart:hover {\n",
              "    background-color: #434B5C;\n",
              "    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "    fill: #FFFFFF;\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const charts = await google.colab.kernel.invokeFunction(\n",
              "          'suggestCharts', [key], {});\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-76379af8-8ecc-42fb-b4e7-efe25ce0883d button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 92
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.dtypes"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "SAPcXXEtnjuh",
        "outputId": "267542c2-8694-420b-cfcd-0813f92135b6"
      },
      "execution_count": 93,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Date          object\n",
              "Open         float64\n",
              "High         float64\n",
              "Low          float64\n",
              "Close        float64\n",
              "Adj Close    float64\n",
              "Volume         int64\n",
              "dtype: object"
            ]
          },
          "metadata": {},
          "execution_count": 93
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df = df.reset_index()['Close']\n",
        "df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "YbTH4CmUnmwk",
        "outputId": "3718e7aa-c59f-4f64-ba96-752f104e2ba1"
      },
      "execution_count": 94,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0        23.889999\n",
              "1        23.830000\n",
              "2        21.959999\n",
              "3        19.200001\n",
              "4        16.110001\n",
              "           ...    \n",
              "2411    566.900024\n",
              "2412    580.989990\n",
              "2413    640.809998\n",
              "2414    650.570007\n",
              "2415    780.000000\n",
              "Name: Close, Length: 2416, dtype: float64"
            ]
          },
          "metadata": {},
          "execution_count": 94
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.isnull().sum()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "AwNyH9kunpf2",
        "outputId": "a7700f33-fc01-4ad1-e20c-fbf52609e586"
      },
      "execution_count": 95,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0"
            ]
          },
          "metadata": {},
          "execution_count": 95
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "HY-dIEJbnsZ7",
        "outputId": "4ca384d5-a032-47e8-9e74-70a4136b580f"
      },
      "execution_count": 96,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0        23.889999\n",
              "1        23.830000\n",
              "2        21.959999\n",
              "3        19.200001\n",
              "4        16.110001\n",
              "           ...    \n",
              "2411    566.900024\n",
              "2412    580.989990\n",
              "2413    640.809998\n",
              "2414    650.570007\n",
              "2415    780.000000\n",
              "Name: Close, Length: 2416, dtype: float64"
            ]
          },
          "metadata": {},
          "execution_count": 96
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Preprocessing**"
      ],
      "metadata": {
        "id": "8ZxhFgTW99gG"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.preprocessing import MinMaxScaler\n",
        "scaler=MinMaxScaler(feature_range=(0,1))\n",
        "df=scaler.fit_transform(np.array(df).reshape(-1,1))"
      ],
      "metadata": {
        "id": "2AFCyJinnu9u"
      },
      "execution_count": 97,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(df)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "YWSnhR0ln0vA",
        "outputId": "d5a3609b-cb49-4dd9-d3aa-8090da9e47a3"
      },
      "execution_count": 98,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[[0.01058623]\n",
            " [0.01050772]\n",
            " [0.00806072]\n",
            " ...\n",
            " [0.81786181]\n",
            " [0.83063335]\n",
            " [1.        ]]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Defining time step and creating training and test datasets according to that time step**"
      ],
      "metadata": {
        "id": "C83O27Nw9_kW"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "training_size = int(len(df)*0.75)\n",
        "test_size=int(len(df)) - training_size\n",
        "train_data, test_data = df[0:training_size, :], df[training_size:len(df), :1]"
      ],
      "metadata": {
        "id": "1ihNuQgFn49q"
      },
      "execution_count": 99,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "training_size,test_size"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "7bStQ0ccn-oJ",
        "outputId": "d9d9df22-617e-411a-eca6-a36a0ee91624"
      },
      "execution_count": 100,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(1812, 604)"
            ]
          },
          "metadata": {},
          "execution_count": 100
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "train_data,test_data"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "I3N0MfyXoGa0",
        "outputId": "31eaa03c-af32-40b9-8cf6-80a0fddff528"
      },
      "execution_count": 101,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(array([[0.01058623],\n",
              "        [0.01050772],\n",
              "        [0.00806072],\n",
              "        ...,\n",
              "        [0.43678356],\n",
              "        [0.43016226],\n",
              "        [0.43811827]]),\n",
              " array([[0.42868358],\n",
              "        [0.45523423],\n",
              "        [0.45400419],\n",
              "        [0.45855798],\n",
              "        [0.47348864],\n",
              "        [0.47632818],\n",
              "        [0.4831196 ],\n",
              "        [0.47016489],\n",
              "        [0.4686077 ],\n",
              "        [0.45888512],\n",
              "        [0.4387464 ],\n",
              "        [0.43076418],\n",
              "        [0.43110442],\n",
              "        [0.4255038 ],\n",
              "        [0.42371108],\n",
              "        [0.42567392],\n",
              "        [0.42623659],\n",
              "        [0.43488618],\n",
              "        [0.44387596],\n",
              "        [0.44429467],\n",
              "        [0.44632296],\n",
              "        [0.42808166],\n",
              "        [0.44463491],\n",
              "        [0.44333945],\n",
              "        [0.44475267],\n",
              "        [0.44460875],\n",
              "        [0.43810522],\n",
              "        [0.44484428],\n",
              "        [0.44994765],\n",
              "        [0.43968856],\n",
              "        [0.43090815],\n",
              "        [0.42033498],\n",
              "        [0.42075372],\n",
              "        [0.40570531],\n",
              "        [0.40613715],\n",
              "        [0.39920177],\n",
              "        [0.398168  ],\n",
              "        [0.41315101],\n",
              "        [0.39947656],\n",
              "        [0.37092386],\n",
              "        [0.37986129],\n",
              "        [0.37552996],\n",
              "        [0.37980893],\n",
              "        [0.37763676],\n",
              "        [0.37580475],\n",
              "        [0.37580475],\n",
              "        [0.39204396],\n",
              "        [0.38327664],\n",
              "        [0.38667886],\n",
              "        [0.38824915],\n",
              "        [0.39158596],\n",
              "        [0.38332896],\n",
              "        [0.39519759],\n",
              "        [0.38838001],\n",
              "        [0.39224024],\n",
              "        [0.39388903],\n",
              "        [0.39485735],\n",
              "        [0.38175871],\n",
              "        [0.38347292],\n",
              "        [0.38043706],\n",
              "        [0.37869669],\n",
              "        [0.37673386],\n",
              "        [0.38924367],\n",
              "        [0.38660035],\n",
              "        [0.39169066],\n",
              "        [0.40972259],\n",
              "        [0.42558231],\n",
              "        [0.42296519],\n",
              "        [0.42147346],\n",
              "        [0.42874903],\n",
              "        [0.42275582],\n",
              "        [0.41258834],\n",
              "        [0.4098142 ],\n",
              "        [0.41332113],\n",
              "        [0.40486785],\n",
              "        [0.39451715],\n",
              "        [0.38712381],\n",
              "        [0.39199161],\n",
              "        [0.38674432],\n",
              "        [0.39875687],\n",
              "        [0.3944648 ],\n",
              "        [0.39102329],\n",
              "        [0.39358805],\n",
              "        [0.41953678],\n",
              "        [0.4159775 ],\n",
              "        [0.41742998],\n",
              "        [0.42155197],\n",
              "        [0.41928815],\n",
              "        [0.424313  ],\n",
              "        [0.43360377],\n",
              "        [0.43021461],\n",
              "        [0.43734623],\n",
              "        [0.43936142],\n",
              "        [0.44097096],\n",
              "        [0.43194192],\n",
              "        [0.42114632],\n",
              "        [0.42796389],\n",
              "        [0.43670505],\n",
              "        [0.43185031],\n",
              "        [0.44295996],\n",
              "        [0.43633865],\n",
              "        [0.42914159],\n",
              "        [0.41524471],\n",
              "        [0.41634389],\n",
              "        [0.43077728],\n",
              "        [0.39182153],\n",
              "        [0.38552737],\n",
              "        [0.39247581],\n",
              "        [0.40285266],\n",
              "        [0.4010861 ],\n",
              "        [0.41647475],\n",
              "        [0.41833288],\n",
              "        [0.41739072],\n",
              "        [0.41546714],\n",
              "        [0.43230831],\n",
              "        [0.4400026 ],\n",
              "        [0.44702959],\n",
              "        [0.43861553],\n",
              "        [0.42823868],\n",
              "        [0.41236586],\n",
              "        [0.41784872],\n",
              "        [0.41553259],\n",
              "        [0.40879353],\n",
              "        [0.41415858],\n",
              "        [0.40997122],\n",
              "        [0.40744571],\n",
              "        [0.43144466],\n",
              "        [0.42664224],\n",
              "        [0.40673908],\n",
              "        [0.40539127],\n",
              "        [0.3998299 ],\n",
              "        [0.38963622],\n",
              "        [0.38569745],\n",
              "        [0.39352264],\n",
              "        [0.38380006],\n",
              "        [0.37390737],\n",
              "        [0.37736194],\n",
              "        [0.34464799],\n",
              "        [0.31664486],\n",
              "        [0.32757132],\n",
              "        [0.30970949],\n",
              "        [0.3294033 ],\n",
              "        [0.35480241],\n",
              "        [0.37937713],\n",
              "        [0.37097617],\n",
              "        [0.35836169],\n",
              "        [0.37804241],\n",
              "        [0.37310912],\n",
              "        [0.36414549],\n",
              "        [0.37233708],\n",
              "        [0.36038994],\n",
              "        [0.35578383],\n",
              "        [0.36319027],\n",
              "        [0.37199684],\n",
              "        [0.35912064],\n",
              "        [0.35013085],\n",
              "        [0.35024861],\n",
              "        [0.34662392],\n",
              "        [0.35289193],\n",
              "        [0.36414549],\n",
              "        [0.36390996],\n",
              "        [0.37178751],\n",
              "        [0.37339701],\n",
              "        [0.35154411],\n",
              "        [0.36415859],\n",
              "        [0.37551687],\n",
              "        [0.37447004],\n",
              "        [0.3808558 ],\n",
              "        [0.37846112],\n",
              "        [0.37327924],\n",
              "        [0.36138446],\n",
              "        [0.35119078],\n",
              "        [0.35420049],\n",
              "        [0.35166188],\n",
              "        [0.34155981],\n",
              "        [0.35159643],\n",
              "        [0.33919132],\n",
              "        [0.34450407],\n",
              "        [0.34290762],\n",
              "        [0.34421618],\n",
              "        [0.35064121],\n",
              "        [0.36105732],\n",
              "        [0.35191051],\n",
              "        [0.36118818],\n",
              "        [0.36762626],\n",
              "        [0.36028527],\n",
              "        [0.39740906],\n",
              "        [0.39294687],\n",
              "        [0.39500131],\n",
              "        [0.41389689],\n",
              "        [0.42785918],\n",
              "        [0.4304894 ],\n",
              "        [0.44742214],\n",
              "        [0.44801101],\n",
              "        [0.46457732],\n",
              "        [0.44065688],\n",
              "        [0.45331065],\n",
              "        [0.43406178],\n",
              "        [0.41589899],\n",
              "        [0.41508769],\n",
              "        [0.42685161],\n",
              "        [0.430123  ],\n",
              "        [0.43722847],\n",
              "        [0.42809476],\n",
              "        [0.41778331],\n",
              "        [0.38610309],\n",
              "        [0.38387857],\n",
              "        [0.38353833],\n",
              "        [0.3961136 ],\n",
              "        [0.40129547],\n",
              "        [0.39670242],\n",
              "        [0.39375817],\n",
              "        [0.39658466],\n",
              "        [0.38510862],\n",
              "        [0.40158336],\n",
              "        [0.40310129],\n",
              "        [0.39836432],\n",
              "        [0.38966238],\n",
              "        [0.37607958],\n",
              "        [0.36852917],\n",
              "        [0.38332896],\n",
              "        [0.38059408],\n",
              "        [0.36820203],\n",
              "        [0.35902907],\n",
              "        [0.36945828],\n",
              "        [0.37299136],\n",
              "        [0.43671815],\n",
              "        [0.43492543],\n",
              "        [0.42683851],\n",
              "        [0.47601414],\n",
              "        [0.46393614],\n",
              "        [0.44052606],\n",
              "        [0.44450404],\n",
              "        [0.44570794],\n",
              "        [0.4342319 ],\n",
              "        [0.42252029],\n",
              "        [0.41828057],\n",
              "        [0.37908924],\n",
              "        [0.38293641],\n",
              "        [0.40054959],\n",
              "        [0.40020939],\n",
              "        [0.3981942 ],\n",
              "        [0.40175348],\n",
              "        [0.39710807],\n",
              "        [0.38741165],\n",
              "        [0.37844806],\n",
              "        [0.37601412],\n",
              "        [0.37406439],\n",
              "        [0.35743262],\n",
              "        [0.34668934],\n",
              "        [0.34696416],\n",
              "        [0.32378957],\n",
              "        [0.35291808],\n",
              "        [0.34498823],\n",
              "        [0.35951323],\n",
              "        [0.35809996],\n",
              "        [0.36561111],\n",
              "        [0.36514001],\n",
              "        [0.35221145],\n",
              "        [0.37060977],\n",
              "        [0.36970687],\n",
              "        [0.37071448],\n",
              "        [0.37147343],\n",
              "        [0.37318763],\n",
              "        [0.38442814],\n",
              "        [0.38173252],\n",
              "        [0.32579166],\n",
              "        [0.38589376],\n",
              "        [0.37322689],\n",
              "        [0.36508766],\n",
              "        [0.34811566],\n",
              "        [0.32210156],\n",
              "        [0.30719707],\n",
              "        [0.3232138 ],\n",
              "        [0.31546716],\n",
              "        [0.30938236],\n",
              "        [0.31795341],\n",
              "        [0.31901334],\n",
              "        [0.34125883],\n",
              "        [0.33496467],\n",
              "        [0.32466632],\n",
              "        [0.31954986],\n",
              "        [0.320793  ],\n",
              "        [0.36422404],\n",
              "        [0.35684376],\n",
              "        [0.39133733],\n",
              "        [0.41232661],\n",
              "        [0.41749543],\n",
              "        [0.41101805],\n",
              "        [0.42072757],\n",
              "        [0.42983512],\n",
              "        [0.43262236],\n",
              "        [0.42606647],\n",
              "        [0.42562156],\n",
              "        [0.43491233],\n",
              "        [0.43915205],\n",
              "        [0.43798745],\n",
              "        [0.41282387],\n",
              "        [0.42257264],\n",
              "        [0.42946873],\n",
              "        [0.43527873],\n",
              "        [0.44295996],\n",
              "        [0.44186077],\n",
              "        [0.43403558],\n",
              "        [0.42186601],\n",
              "        [0.40569221],\n",
              "        [0.43208584],\n",
              "        [0.42936406],\n",
              "        [0.43453284],\n",
              "        [0.42576552],\n",
              "        [0.4379482 ],\n",
              "        [0.44842972],\n",
              "        [0.4500131 ],\n",
              "        [0.45440984],\n",
              "        [0.44774928],\n",
              "        [0.45714472],\n",
              "        [0.45925152],\n",
              "        [0.45904214],\n",
              "        [0.47237635],\n",
              "        [0.45787751],\n",
              "        [0.43525257],\n",
              "        [0.42034808],\n",
              "        [0.41503533],\n",
              "        [0.3920178 ],\n",
              "        [0.39776235],\n",
              "        [0.36585974],\n",
              "        [0.40603245],\n",
              "        [0.39299922],\n",
              "        [0.41621303],\n",
              "        [0.41481286],\n",
              "        [0.38513477],\n",
              "        [0.37236324],\n",
              "        [0.39504057],\n",
              "        [0.41763935],\n",
              "        [0.41814971],\n",
              "        [0.42231091],\n",
              "        [0.43073803],\n",
              "        [0.43373464],\n",
              "        [0.41690656],\n",
              "        [0.4300314 ],\n",
              "        [0.43215125],\n",
              "        [0.43380005],\n",
              "        [0.37484953],\n",
              "        [0.37047895],\n",
              "        [0.35565297],\n",
              "        [0.36078253],\n",
              "        [0.36801886],\n",
              "        [0.3671552 ],\n",
              "        [0.36856843],\n",
              "        [0.38336821],\n",
              "        [0.38107824],\n",
              "        [0.38786966],\n",
              "        [0.38875951],\n",
              "        [0.3998299 ],\n",
              "        [0.39442554],\n",
              "        [0.38171946],\n",
              "        [0.3794818 ],\n",
              "        [0.38869405],\n",
              "        [0.38734624],\n",
              "        [0.38258311],\n",
              "        [0.37682542],\n",
              "        [0.38220362],\n",
              "        [0.37927246],\n",
              "        [0.37524208],\n",
              "        [0.36041614],\n",
              "        [0.36496989],\n",
              "        [0.37028263],\n",
              "        [0.36909184],\n",
              "        [0.39118031],\n",
              "        [0.39790631],\n",
              "        [0.3650746 ],\n",
              "        [0.35273487],\n",
              "        [0.34119342],\n",
              "        [0.34080082],\n",
              "        [0.34125883],\n",
              "        [0.35113847],\n",
              "        [0.36001049],\n",
              "        [0.35011775],\n",
              "        [0.35744568],\n",
              "        [0.35875424],\n",
              "        [0.3397409 ],\n",
              "        [0.33196806],\n",
              "        [0.32932479],\n",
              "        [0.33734625],\n",
              "        [0.33789582],\n",
              "        [0.32547762],\n",
              "        [0.32009947],\n",
              "        [0.32971734],\n",
              "        [0.33895575],\n",
              "        [0.3439152 ],\n",
              "        [0.3455378 ],\n",
              "        [0.35773357],\n",
              "        [0.35341534],\n",
              "        [0.36117508],\n",
              "        [0.32973044],\n",
              "        [0.33912587],\n",
              "        [0.33682284],\n",
              "        [0.3356582 ],\n",
              "        [0.34056529],\n",
              "        [0.33056793],\n",
              "        [0.32962577],\n",
              "        [0.32789846],\n",
              "        [0.33703217],\n",
              "        [0.33424498],\n",
              "        [0.33690135],\n",
              "        [0.32314839],\n",
              "        [0.32465322],\n",
              "        [0.31779639],\n",
              "        [0.303363  ],\n",
              "        [0.2870191 ],\n",
              "        [0.29530228],\n",
              "        [0.29166449],\n",
              "        [0.28554043],\n",
              "        [0.29874379],\n",
              "        [0.31304632],\n",
              "        [0.31345197],\n",
              "        [0.30261711],\n",
              "        [0.29971211],\n",
              "        [0.29596964],\n",
              "        [0.29275059],\n",
              "        [0.27638052],\n",
              "        [0.28331588],\n",
              "        [0.2828448 ],\n",
              "        [0.27810783],\n",
              "        [0.25546977],\n",
              "        [0.24805025],\n",
              "        [0.24768386],\n",
              "        [0.23152316],\n",
              "        [0.23513479],\n",
              "        [0.2287752 ],\n",
              "        [0.22624967],\n",
              "        [0.2277676 ],\n",
              "        [0.22562157],\n",
              "        [0.22161738],\n",
              "        [0.21351741],\n",
              "        [0.23266161],\n",
              "        [0.23657419],\n",
              "        [0.24882229],\n",
              "        [0.24692489],\n",
              "        [0.25789061],\n",
              "        [0.26341273],\n",
              "        [0.25315362],\n",
              "        [0.25923842],\n",
              "        [0.26056006],\n",
              "        [0.27378958],\n",
              "        [0.27341011],\n",
              "        [0.27562156],\n",
              "        [0.26671028],\n",
              "        [0.26964146],\n",
              "        [0.27197069],\n",
              "        [0.26689348],\n",
              "        [0.2662523 ],\n",
              "        [0.27092384],\n",
              "        [0.27173516],\n",
              "        [0.2765899 ],\n",
              "        [0.27316148],\n",
              "        [0.28670504],\n",
              "        [0.28434965],\n",
              "        [0.28073802],\n",
              "        [0.28037163],\n",
              "        [0.29196545],\n",
              "        [0.29154672],\n",
              "        [0.30002617],\n",
              "        [0.31104423],\n",
              "        [0.30957865],\n",
              "        [0.31282387],\n",
              "        [0.31109656],\n",
              "        [0.31716827],\n",
              "        [0.31389688],\n",
              "        [0.31977233],\n",
              "        [0.32593563],\n",
              "        [0.27874903],\n",
              "        [0.27772833],\n",
              "        [0.2878435 ],\n",
              "        [0.29633603],\n",
              "        [0.29548548],\n",
              "        [0.28533107],\n",
              "        [0.28597225],\n",
              "        [0.27809475],\n",
              "        [0.28127454],\n",
              "        [0.28476838],\n",
              "        [0.29115415],\n",
              "        [0.28684899],\n",
              "        [0.27899764],\n",
              "        [0.28683591],\n",
              "        [0.26671028],\n",
              "        [0.26150222],\n",
              "        [0.26712903],\n",
              "        [0.27614499],\n",
              "        [0.27487569],\n",
              "        [0.26829364],\n",
              "        [0.27002093],\n",
              "        [0.25595393],\n",
              "        [0.26066475],\n",
              "        [0.25946088],\n",
              "        [0.26143679],\n",
              "        [0.26944518],\n",
              "        [0.27454855],\n",
              "        [0.27376341],\n",
              "        [0.26809735],\n",
              "        [0.27974353],\n",
              "        [0.27695629],\n",
              "        [0.28263543],\n",
              "        [0.28754252],\n",
              "        [0.30266947],\n",
              "        [0.30105993],\n",
              "        [0.30018319],\n",
              "        [0.29705574],\n",
              "        [0.29964668],\n",
              "        [0.29794557],\n",
              "        [0.30201519],\n",
              "        [0.29419   ],\n",
              "        [0.29498822],\n",
              "        [0.27140802],\n",
              "        [0.27859199],\n",
              "        [0.2967286 ],\n",
              "        [0.29616593],\n",
              "        [0.29451714],\n",
              "        [0.29951584],\n",
              "        [0.29747449],\n",
              "        [0.28425805],\n",
              "        [0.28216435],\n",
              "        [0.29039519],\n",
              "        [0.29344413],\n",
              "        [0.29930646],\n",
              "        [0.29958127],\n",
              "        [0.30370322],\n",
              "        [0.31557183],\n",
              "        [0.31678882],\n",
              "        [0.31922272],\n",
              "        [0.32212772],\n",
              "        [0.31555877],\n",
              "        [0.31104423],\n",
              "        [0.31376603],\n",
              "        [0.31258832],\n",
              "        [0.37147343],\n",
              "        [0.40870192],\n",
              "        [0.4081523 ],\n",
              "        [0.39311699],\n",
              "        [0.39153364],\n",
              "        [0.39141588],\n",
              "        [0.38930908],\n",
              "        [0.39475268],\n",
              "        [0.39442554],\n",
              "        [0.40667363],\n",
              "        [0.41839834],\n",
              "        [0.42049204],\n",
              "        [0.43089505],\n",
              "        [0.43722847],\n",
              "        [0.43222976],\n",
              "        [0.43646952],\n",
              "        [0.44015966],\n",
              "        [0.43730697],\n",
              "        [0.44977753],\n",
              "        [0.44022507],\n",
              "        [0.44364039],\n",
              "        [0.41512694],\n",
              "        [0.41944517],\n",
              "        [0.40973569],\n",
              "        [0.41283697],\n",
              "        [0.4110704 ],\n",
              "        [0.41752158],\n",
              "        [0.41926199],\n",
              "        [0.41511384],\n",
              "        [0.41163307],\n",
              "        [0.41885634],\n",
              "        [0.42361947],\n",
              "        [0.43580214],\n",
              "        [0.4408532 ],\n",
              "        [0.44998691],\n",
              "        [0.44829889],\n",
              "        [0.47853965],\n",
              "        [0.47525516],\n",
              "        [0.49378434],\n",
              "        [0.50803456],\n",
              "        [0.51006281],\n",
              "        [0.52789846],\n",
              "        [0.53578906],\n",
              "        [0.54323476],\n",
              "        [0.54250197],\n",
              "        [0.52198379],\n",
              "        [0.52673382],\n",
              "        [0.54234495],\n",
              "        [0.55902906],\n",
              "        [0.57019106],\n",
              "        [0.59311698],\n",
              "        [0.62331852],\n",
              "        [0.60918607],\n",
              "        [0.60501177],\n",
              "        [0.6661345 ],\n",
              "        [0.68322426],\n",
              "        [0.65781209],\n",
              "        [0.6512562 ],\n",
              "        [0.64734363],\n",
              "        [0.69536772],\n",
              "        [0.72462706],\n",
              "        [0.72808167],\n",
              "        [0.71842451],\n",
              "        [0.70952633],\n",
              "        [0.72114633],\n",
              "        [0.73958387],\n",
              "        [0.81786181],\n",
              "        [0.83063335],\n",
              "        [1.        ]]))"
            ]
          },
          "metadata": {},
          "execution_count": 101
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Convert an array of values into a dataset matrix**"
      ],
      "metadata": {
        "id": "4iRR7Hzr-IY3"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "def create_features(dataset, time_step=1):\n",
        "    dataX, dataY = [], []\n",
        "    for i in range(len(dataset)-time_step-1):\n",
        "        a=dataset[i:(i+time_step), 0]\n",
        "        dataX.append(a)\n",
        "        dataY.append(dataset[i + time_step, 0])\n",
        "    return np.array(dataX), np.array(dataY)"
      ],
      "metadata": {
        "id": "vOTUFWy6oIrF"
      },
      "execution_count": 102,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Reshape into X=t,t+1,t+2,t+3 and Y=t+4**"
      ],
      "metadata": {
        "id": "1rmDbXuf-L-k"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "ts = 100\n",
        "X_train, y_train = create_features(train_data, ts)\n",
        "X_test, y_test = create_features(test_data, ts)"
      ],
      "metadata": {
        "id": "MIN-AmcIoQSZ"
      },
      "execution_count": 103,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(X_train.shape), print(y_train.shape)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "XUCstjixoTcd",
        "outputId": "d47d510c-e37a-4d24-f97a-25893963ef80"
      },
      "execution_count": 104,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "(1711, 100)\n",
            "(1711,)\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(None, None)"
            ]
          },
          "metadata": {},
          "execution_count": 104
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Reshape input to be [samples, time steps, features] which is required for LSTM**"
      ],
      "metadata": {
        "id": "QpSQf5Q7-PI4"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "X_train=X_train.reshape(X_train.shape[0], X_train.shape[1], 1)\n",
        "X_test=X_test.reshape(X_test.shape[0], X_test.shape[1], 1)"
      ],
      "metadata": {
        "id": "-1cX8S8WoWBI"
      },
      "execution_count": 105,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Creating model**"
      ],
      "metadata": {
        "id": "gIw4e3ur-adk"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "model = Sequential()\n",
        "model.add(LSTM(50,return_sequences=True, input_shape=(100,1)))\n",
        "model.add(LSTM(50,return_sequences=True))\n",
        "model.add(LSTM(50))\n",
        "model.add(Dense(1))\n",
        "model.compile(loss='mean_squared_error', optimizer='adam')"
      ],
      "metadata": {
        "id": "34_Unl--ooP6"
      },
      "execution_count": 106,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "model.summary()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "n0CQ0pbqouNI",
        "outputId": "a756ef29-1d72-4269-a167-0230451a56ba"
      },
      "execution_count": 107,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Model: \"sequential_5\"\n",
            "_________________________________________________________________\n",
            "Layer (type)                 Output Shape              Param #   \n",
            "=================================================================\n",
            "lstm_15 (LSTM)               (None, 100, 50)           10400     \n",
            "_________________________________________________________________\n",
            "lstm_16 (LSTM)               (None, 100, 50)           20200     \n",
            "_________________________________________________________________\n",
            "lstm_17 (LSTM)               (None, 50)                20200     \n",
            "_________________________________________________________________\n",
            "dense_5 (Dense)              (None, 1)                 51        \n",
            "=================================================================\n",
            "Total params: 50,851\n",
            "Trainable params: 50,851\n",
            "Non-trainable params: 0\n",
            "_________________________________________________________________\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "model.fit(X_train, y_train, validation_data=(X_test, y_test), epochs=100, batch_size=64, verbose=1)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Iv7Pv2uXovpz",
        "outputId": "596d04cc-9819-4ab1-b3c0-5f88626eaaa8"
      },
      "execution_count": 108,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Epoch 1/100\n",
            "27/27 [==============================] - 29s 479ms/step - loss: 0.0092 - val_loss: 0.0023\n",
            "Epoch 2/100\n",
            "27/27 [==============================] - 12s 448ms/step - loss: 6.4506e-04 - val_loss: 0.0021\n",
            "Epoch 3/100\n",
            "27/27 [==============================] - 12s 460ms/step - loss: 3.9575e-04 - val_loss: 0.0020\n",
            "Epoch 4/100\n",
            "27/27 [==============================] - 12s 461ms/step - loss: 3.6107e-04 - val_loss: 0.0019\n",
            "Epoch 5/100\n",
            "27/27 [==============================] - 12s 460ms/step - loss: 3.4737e-04 - val_loss: 0.0018\n",
            "Epoch 6/100\n",
            "27/27 [==============================] - 12s 459ms/step - loss: 3.3745e-04 - val_loss: 0.0017\n",
            "Epoch 7/100\n",
            "27/27 [==============================] - 13s 501ms/step - loss: 3.3689e-04 - val_loss: 0.0018\n",
            "Epoch 8/100\n",
            "27/27 [==============================] - 14s 527ms/step - loss: 3.1107e-04 - val_loss: 0.0016\n",
            "Epoch 9/100\n",
            "27/27 [==============================] - 13s 468ms/step - loss: 2.9778e-04 - val_loss: 0.0015\n",
            "Epoch 10/100\n",
            "27/27 [==============================] - 13s 467ms/step - loss: 2.7501e-04 - val_loss: 0.0014\n",
            "Epoch 11/100\n",
            "27/27 [==============================] - 12s 459ms/step - loss: 2.7931e-04 - val_loss: 0.0014\n",
            "Epoch 12/100\n",
            "27/27 [==============================] - 12s 461ms/step - loss: 2.5946e-04 - val_loss: 0.0013\n",
            "Epoch 13/100\n",
            "27/27 [==============================] - 14s 513ms/step - loss: 2.4351e-04 - val_loss: 0.0011\n",
            "Epoch 14/100\n",
            "27/27 [==============================] - 12s 460ms/step - loss: 2.3503e-04 - val_loss: 0.0013\n",
            "Epoch 15/100\n",
            "27/27 [==============================] - 12s 459ms/step - loss: 2.4535e-04 - val_loss: 0.0011\n",
            "Epoch 16/100\n",
            "27/27 [==============================] - 12s 462ms/step - loss: 2.1168e-04 - val_loss: 0.0011\n",
            "Epoch 17/100\n",
            "27/27 [==============================] - 12s 463ms/step - loss: 2.0616e-04 - val_loss: 9.3419e-04\n",
            "Epoch 18/100\n",
            "27/27 [==============================] - 12s 463ms/step - loss: 1.9537e-04 - val_loss: 0.0013\n",
            "Epoch 19/100\n",
            "27/27 [==============================] - 12s 459ms/step - loss: 2.0178e-04 - val_loss: 0.0012\n",
            "Epoch 20/100\n",
            "27/27 [==============================] - 12s 456ms/step - loss: 1.8732e-04 - val_loss: 8.6696e-04\n",
            "Epoch 21/100\n",
            "27/27 [==============================] - 12s 436ms/step - loss: 1.9158e-04 - val_loss: 8.7514e-04\n",
            "Epoch 22/100\n",
            "27/27 [==============================] - 12s 429ms/step - loss: 1.6887e-04 - val_loss: 8.0788e-04\n",
            "Epoch 23/100\n",
            "27/27 [==============================] - 12s 440ms/step - loss: 1.6835e-04 - val_loss: 7.8415e-04\n",
            "Epoch 24/100\n",
            "27/27 [==============================] - 12s 461ms/step - loss: 1.8108e-04 - val_loss: 8.4332e-04\n",
            "Epoch 25/100\n",
            "27/27 [==============================] - 12s 459ms/step - loss: 1.6717e-04 - val_loss: 7.7830e-04\n",
            "Epoch 26/100\n",
            "27/27 [==============================] - 12s 460ms/step - loss: 1.5766e-04 - val_loss: 8.2662e-04\n",
            "Epoch 27/100\n",
            "27/27 [==============================] - 12s 459ms/step - loss: 1.7031e-04 - val_loss: 7.1821e-04\n",
            "Epoch 28/100\n",
            "27/27 [==============================] - 12s 462ms/step - loss: 1.6208e-04 - val_loss: 7.4532e-04\n",
            "Epoch 29/100\n",
            "27/27 [==============================] - 14s 497ms/step - loss: 1.4502e-04 - val_loss: 6.8613e-04\n",
            "Epoch 30/100\n",
            "27/27 [==============================] - 12s 459ms/step - loss: 1.5982e-04 - val_loss: 6.8414e-04\n",
            "Epoch 31/100\n",
            "27/27 [==============================] - 12s 458ms/step - loss: 1.5066e-04 - val_loss: 7.5147e-04\n",
            "Epoch 32/100\n",
            "27/27 [==============================] - 12s 462ms/step - loss: 1.5428e-04 - val_loss: 6.4156e-04\n",
            "Epoch 33/100\n",
            "27/27 [==============================] - 12s 461ms/step - loss: 1.4910e-04 - val_loss: 6.8841e-04\n",
            "Epoch 34/100\n",
            "27/27 [==============================] - 12s 461ms/step - loss: 1.6528e-04 - val_loss: 7.1317e-04\n",
            "Epoch 35/100\n",
            "27/27 [==============================] - 12s 460ms/step - loss: 1.3967e-04 - val_loss: 6.8996e-04\n",
            "Epoch 36/100\n",
            "27/27 [==============================] - 12s 462ms/step - loss: 1.5042e-04 - val_loss: 6.0368e-04\n",
            "Epoch 37/100\n",
            "27/27 [==============================] - 12s 460ms/step - loss: 1.3480e-04 - val_loss: 5.9008e-04\n",
            "Epoch 38/100\n",
            "27/27 [==============================] - 12s 458ms/step - loss: 1.4866e-04 - val_loss: 5.8651e-04\n",
            "Epoch 39/100\n",
            "27/27 [==============================] - 12s 458ms/step - loss: 1.5232e-04 - val_loss: 7.2124e-04\n",
            "Epoch 40/100\n",
            "27/27 [==============================] - 12s 460ms/step - loss: 1.2677e-04 - val_loss: 6.8209e-04\n",
            "Epoch 41/100\n",
            "27/27 [==============================] - 12s 460ms/step - loss: 1.4256e-04 - val_loss: 6.7042e-04\n",
            "Epoch 42/100\n",
            "27/27 [==============================] - 12s 434ms/step - loss: 1.3447e-04 - val_loss: 5.4007e-04\n",
            "Epoch 43/100\n",
            "27/27 [==============================] - 12s 426ms/step - loss: 1.3054e-04 - val_loss: 5.7428e-04\n",
            "Epoch 44/100\n",
            "27/27 [==============================] - 14s 515ms/step - loss: 1.2000e-04 - val_loss: 5.1680e-04\n",
            "Epoch 45/100\n",
            "27/27 [==============================] - 12s 426ms/step - loss: 1.2088e-04 - val_loss: 5.7205e-04\n",
            "Epoch 46/100\n",
            "27/27 [==============================] - 12s 444ms/step - loss: 1.1570e-04 - val_loss: 5.3472e-04\n",
            "Epoch 47/100\n",
            "27/27 [==============================] - 12s 461ms/step - loss: 1.3068e-04 - val_loss: 5.5653e-04\n",
            "Epoch 48/100\n",
            "27/27 [==============================] - 12s 458ms/step - loss: 1.2861e-04 - val_loss: 5.2731e-04\n",
            "Epoch 49/100\n",
            "27/27 [==============================] - 12s 460ms/step - loss: 1.3155e-04 - val_loss: 4.8658e-04\n",
            "Epoch 50/100\n",
            "27/27 [==============================] - 12s 459ms/step - loss: 1.1742e-04 - val_loss: 4.6760e-04\n",
            "Epoch 51/100\n",
            "27/27 [==============================] - 12s 460ms/step - loss: 1.1131e-04 - val_loss: 4.6638e-04\n",
            "Epoch 52/100\n",
            "27/27 [==============================] - 12s 460ms/step - loss: 1.0891e-04 - val_loss: 4.5525e-04\n",
            "Epoch 53/100\n",
            "27/27 [==============================] - 12s 460ms/step - loss: 1.1776e-04 - val_loss: 4.8901e-04\n",
            "Epoch 54/100\n",
            "27/27 [==============================] - 12s 458ms/step - loss: 1.1646e-04 - val_loss: 4.8059e-04\n",
            "Epoch 55/100\n",
            "27/27 [==============================] - 12s 462ms/step - loss: 1.1340e-04 - val_loss: 4.3189e-04\n",
            "Epoch 56/100\n",
            "27/27 [==============================] - 12s 462ms/step - loss: 1.0752e-04 - val_loss: 4.3068e-04\n",
            "Epoch 57/100\n",
            "27/27 [==============================] - 12s 463ms/step - loss: 1.0697e-04 - val_loss: 4.3517e-04\n",
            "Epoch 58/100\n",
            "27/27 [==============================] - 12s 461ms/step - loss: 1.0338e-04 - val_loss: 4.2296e-04\n",
            "Epoch 59/100\n",
            "27/27 [==============================] - 12s 459ms/step - loss: 9.7699e-05 - val_loss: 4.0656e-04\n",
            "Epoch 60/100\n",
            "27/27 [==============================] - 14s 515ms/step - loss: 1.1068e-04 - val_loss: 3.9870e-04\n",
            "Epoch 61/100\n",
            "27/27 [==============================] - 12s 439ms/step - loss: 1.0585e-04 - val_loss: 4.3131e-04\n",
            "Epoch 62/100\n",
            "27/27 [==============================] - 12s 426ms/step - loss: 9.9829e-05 - val_loss: 4.7942e-04\n",
            "Epoch 63/100\n",
            "27/27 [==============================] - 12s 440ms/step - loss: 1.1263e-04 - val_loss: 4.1063e-04\n",
            "Epoch 64/100\n",
            "27/27 [==============================] - 12s 456ms/step - loss: 1.1778e-04 - val_loss: 4.4659e-04\n",
            "Epoch 65/100\n",
            "27/27 [==============================] - 12s 460ms/step - loss: 1.1049e-04 - val_loss: 5.1850e-04\n",
            "Epoch 66/100\n",
            "27/27 [==============================] - 12s 462ms/step - loss: 1.1847e-04 - val_loss: 4.3177e-04\n",
            "Epoch 67/100\n",
            "27/27 [==============================] - 12s 462ms/step - loss: 1.0309e-04 - val_loss: 3.7822e-04\n",
            "Epoch 68/100\n",
            "27/27 [==============================] - 12s 458ms/step - loss: 8.8999e-05 - val_loss: 3.8592e-04\n",
            "Epoch 69/100\n",
            "27/27 [==============================] - 12s 460ms/step - loss: 8.5982e-05 - val_loss: 3.4994e-04\n",
            "Epoch 70/100\n",
            "27/27 [==============================] - 12s 460ms/step - loss: 9.2465e-05 - val_loss: 3.4510e-04\n",
            "Epoch 71/100\n",
            "27/27 [==============================] - 12s 460ms/step - loss: 9.3446e-05 - val_loss: 3.4132e-04\n",
            "Epoch 72/100\n",
            "27/27 [==============================] - 12s 462ms/step - loss: 8.5704e-05 - val_loss: 3.6951e-04\n",
            "Epoch 73/100\n",
            "27/27 [==============================] - 12s 459ms/step - loss: 1.1287e-04 - val_loss: 3.6860e-04\n",
            "Epoch 74/100\n",
            "27/27 [==============================] - 12s 458ms/step - loss: 8.8220e-05 - val_loss: 3.2798e-04\n",
            "Epoch 75/100\n",
            "27/27 [==============================] - 12s 462ms/step - loss: 7.9503e-05 - val_loss: 3.4097e-04\n",
            "Epoch 76/100\n",
            "27/27 [==============================] - 14s 516ms/step - loss: 8.8543e-05 - val_loss: 3.3864e-04\n",
            "Epoch 77/100\n",
            "27/27 [==============================] - 12s 460ms/step - loss: 9.4812e-05 - val_loss: 3.1731e-04\n",
            "Epoch 78/100\n",
            "27/27 [==============================] - 12s 435ms/step - loss: 8.0458e-05 - val_loss: 3.5605e-04\n",
            "Epoch 79/100\n",
            "27/27 [==============================] - 12s 422ms/step - loss: 1.0375e-04 - val_loss: 3.0219e-04\n",
            "Epoch 80/100\n",
            "27/27 [==============================] - 12s 447ms/step - loss: 8.4807e-05 - val_loss: 3.0010e-04\n",
            "Epoch 81/100\n",
            "27/27 [==============================] - 12s 461ms/step - loss: 8.3301e-05 - val_loss: 3.3095e-04\n",
            "Epoch 82/100\n",
            "27/27 [==============================] - 12s 462ms/step - loss: 8.6771e-05 - val_loss: 3.0912e-04\n",
            "Epoch 83/100\n",
            "27/27 [==============================] - 12s 459ms/step - loss: 8.1662e-05 - val_loss: 2.8515e-04\n",
            "Epoch 84/100\n",
            "27/27 [==============================] - 12s 461ms/step - loss: 7.8255e-05 - val_loss: 3.5340e-04\n",
            "Epoch 85/100\n",
            "27/27 [==============================] - 12s 459ms/step - loss: 7.1468e-05 - val_loss: 2.8880e-04\n",
            "Epoch 86/100\n",
            "27/27 [==============================] - 12s 461ms/step - loss: 7.6940e-05 - val_loss: 2.9910e-04\n",
            "Epoch 87/100\n",
            "27/27 [==============================] - 12s 461ms/step - loss: 7.1859e-05 - val_loss: 2.7859e-04\n",
            "Epoch 88/100\n",
            "27/27 [==============================] - 12s 460ms/step - loss: 6.7901e-05 - val_loss: 2.6234e-04\n",
            "Epoch 89/100\n",
            "27/27 [==============================] - 12s 457ms/step - loss: 6.9419e-05 - val_loss: 2.6589e-04\n",
            "Epoch 90/100\n",
            "27/27 [==============================] - 12s 463ms/step - loss: 7.5084e-05 - val_loss: 2.5375e-04\n",
            "Epoch 91/100\n",
            "27/27 [==============================] - 12s 460ms/step - loss: 6.5830e-05 - val_loss: 2.5145e-04\n",
            "Epoch 92/100\n",
            "27/27 [==============================] - 14s 515ms/step - loss: 6.6623e-05 - val_loss: 2.4751e-04\n",
            "Epoch 93/100\n",
            "27/27 [==============================] - 12s 461ms/step - loss: 5.9751e-05 - val_loss: 2.4415e-04\n",
            "Epoch 94/100\n",
            "27/27 [==============================] - 12s 458ms/step - loss: 5.9363e-05 - val_loss: 2.6312e-04\n",
            "Epoch 95/100\n",
            "27/27 [==============================] - 12s 456ms/step - loss: 6.2329e-05 - val_loss: 2.4083e-04\n",
            "Epoch 96/100\n",
            "27/27 [==============================] - 12s 429ms/step - loss: 5.7179e-05 - val_loss: 2.3039e-04\n",
            "Epoch 97/100\n",
            "27/27 [==============================] - 14s 528ms/step - loss: 6.4391e-05 - val_loss: 2.2945e-04\n",
            "Epoch 98/100\n",
            "27/27 [==============================] - 12s 452ms/step - loss: 5.5805e-05 - val_loss: 2.3405e-04\n",
            "Epoch 99/100\n",
            "27/27 [==============================] - 12s 458ms/step - loss: 6.2005e-05 - val_loss: 3.4354e-04\n",
            "Epoch 100/100\n",
            "27/27 [==============================] - 12s 457ms/step - loss: 6.0384e-05 - val_loss: 2.8298e-04\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<tensorflow.python.keras.callbacks.History at 0x7bedd1909de0>"
            ]
          },
          "metadata": {},
          "execution_count": 108
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Predicting and checking performance metrics**"
      ],
      "metadata": {
        "id": "4RkYYcuo-hn1"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "train_predict=model.predict(X_train)\n",
        "test_predict=model.predict(X_test)"
      ],
      "metadata": {
        "id": "h7BXHA7go6ne"
      },
      "execution_count": 109,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "train_predict = scaler.inverse_transform(train_predict)\n",
        "test_predict = scaler.inverse_transform(test_predict)"
      ],
      "metadata": {
        "id": "Ae2zufzypjtV"
      },
      "execution_count": 110,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Calculating RMSE**"
      ],
      "metadata": {
        "id": "o5GTvkkD-o0D"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "math.sqrt(mean_squared_error(y_train,train_predict))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "DUJmINPpsFtO",
        "outputId": "80039cf0-fd6f-4591-9cb9-8b95ff7ad2e8"
      },
      "execution_count": 111,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "180.2949079219812"
            ]
          },
          "metadata": {},
          "execution_count": 111
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "math.sqrt(mean_squared_error(y_test,test_predict))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "2lzgeFyAsHNI",
        "outputId": "dc6134e9-43bf-478d-fea9-65c0e7750d01"
      },
      "execution_count": 112,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "304.1683992248499"
            ]
          },
          "metadata": {},
          "execution_count": 112
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Plotting the graph according to train and test data**"
      ],
      "metadata": {
        "id": "fnNHidDr-sK6"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "look_back=100\n",
        "trainPredictPlot = np.empty_like(df)\n",
        "trainPredictPlot[:, :] = np.nan\n",
        "trainPredictPlot[look_back:len(train_predict)+look_back, :] = train_predict\n",
        "\n",
        "testPredictPlot = np.empty_like(df)\n",
        "testPredictPlot[:, :] = np.nan\n",
        "testPredictPlot[len(train_predict)+(look_back*2)+1:len(df)-1, :] = test_predict\n",
        "\n",
        "plt.plot(scaler.inverse_transform(df))\n",
        "plt.plot(trainPredictPlot)\n",
        "plt.plot(testPredictPlot)\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 430
        },
        "id": "Knhc4UEYplI_",
        "outputId": "d7aba1f2-418e-4fe4-dd58-dc39efb39d50"
      },
      "execution_count": 113,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "len(test_data)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "dJC4gtL-sQty",
        "outputId": "7f64aa9e-2ab6-474a-8bd2-d93218b9b861"
      },
      "execution_count": 114,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "604"
            ]
          },
          "metadata": {},
          "execution_count": 114
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "x_input=test_data[504:].reshape(1,-1)\n",
        "x_input.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "dXcq34X4sR-8",
        "outputId": "b91bbf7f-c67f-4224-a6fc-dc1436283e11"
      },
      "execution_count": 118,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(1, 100)"
            ]
          },
          "metadata": {},
          "execution_count": 118
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "temp_input=list(x_input)\n",
        "temp_input=temp_input[0].tolist()\n",
        "temp_input"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "TyjsONs-sWeL",
        "outputId": "3ee97587-13f6-44d2-c9f9-697a61fddc84"
      },
      "execution_count": 119,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[0.3026694661083486,\n",
              " 0.30105992541219573,\n",
              " 0.3001831941900026,\n",
              " 0.2970557419523685,\n",
              " 0.2996466801884323,\n",
              " 0.2979455705312745,\n",
              " 0.30201518712378955,\n",
              " 0.29418999607432605,\n",
              " 0.29498821774404604,\n",
              " 0.27140801753467675,\n",
              " 0.27859198769955507,\n",
              " 0.296728602460089,\n",
              " 0.296165931693274,\n",
              " 0.2945171355666056,\n",
              " 0.2995158361685422,\n",
              " 0.29747448966239204,\n",
              " 0.2842580463229521,\n",
              " 0.2821643457210154,\n",
              " 0.2903951858152316,\n",
              " 0.29344412850039253,\n",
              " 0.29930646296780944,\n",
              " 0.29958126799267204,\n",
              " 0.303703217744046,\n",
              " 0.31557182805548284,\n",
              " 0.3167888183721539,\n",
              " 0.3192227165663439,\n",
              " 0.3221277165663439,\n",
              " 0.315558769955509,\n",
              " 0.31104422925935615,\n",
              " 0.3137660324522376,\n",
              " 0.31258831850300967,\n",
              " 0.37147342711332115,\n",
              " 0.4087019170374247,\n",
              " 0.4081523043705836,\n",
              " 0.3931169863909971,\n",
              " 0.391533643025386,\n",
              " 0.39141587673383926,\n",
              " 0.3893090787751897,\n",
              " 0.39475268385239465,\n",
              " 0.3944255443601152,\n",
              " 0.40667362863124834,\n",
              " 0.41839833682282124,\n",
              " 0.4204920374247579,\n",
              " 0.43089504841664483,\n",
              " 0.43722846506150226,\n",
              " 0.4322297631510076,\n",
              " 0.43646951845066734,\n",
              " 0.440159661083486,\n",
              " 0.43730697461397533,\n",
              " 0.44977753075111226,\n",
              " 0.44022507327924626,\n",
              " 0.44364039125883276,\n",
              " 0.41512694190002614,\n",
              " 0.41944516618686206,\n",
              " 0.4097356883014917,\n",
              " 0.4128369654540696,\n",
              " 0.41107040303585446,\n",
              " 0.4175215846637006,\n",
              " 0.41926198900811307,\n",
              " 0.41511384323475525,\n",
              " 0.41163307380266945,\n",
              " 0.41885633996336036,\n",
              " 0.42361947003402245,\n",
              " 0.43580214080083746,\n",
              " 0.44085319549856056,\n",
              " 0.449986905260403,\n",
              " 0.4482988942685161,\n",
              " 0.47853964930646425,\n",
              " 0.47525515571839827,\n",
              " 0.4937843417953415,\n",
              " 0.5080345577074064,\n",
              " 0.5100628055482858,\n",
              " 0.5278984572101544,\n",
              " 0.5357890604553781,\n",
              " 0.5432347579167757,\n",
              " 0.5425019693797435,\n",
              " 0.5219837895838786,\n",
              " 0.5267338222978278,\n",
              " 0.5423449489662392,\n",
              " 0.5590290630724941,\n",
              " 0.5701910612405129,\n",
              " 0.5931169824653232,\n",
              " 0.6233185226380529,\n",
              " 0.6091860717089767,\n",
              " 0.6050117691703742,\n",
              " 0.6661345001308558,\n",
              " 0.6832242645904213,\n",
              " 0.6578120910756347,\n",
              " 0.6512562025647736,\n",
              " 0.6473436273226904,\n",
              " 0.6953677204920178,\n",
              " 0.7246270583616853,\n",
              " 0.7280816697199686,\n",
              " 0.7184245053650876,\n",
              " 0.7095263281863387,\n",
              " 0.7211463281863386,\n",
              " 0.7395838654802408,\n",
              " 0.817861813661345,\n",
              " 0.8306333512169589,\n",
              " 1.0]"
            ]
          },
          "metadata": {},
          "execution_count": 119
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Predicting values for next 30 days**"
      ],
      "metadata": {
        "id": "CYgnUdba_bOi"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "lst_output=[]\n",
        "n_steps=100\n",
        "i=0\n",
        "while(i<30):\n",
        "\n",
        "    if(len(temp_input)>100):\n",
        "        x_input=np.array(temp_input[1:])\n",
        "        print(\"{} day input {}\".format(i,x_input))\n",
        "        x_input=x_input.reshape(1,-1)\n",
        "        x_input = x_input.reshape((1, n_steps, 1))\n",
        "\n",
        "        yhat = model.predict(x_input, verbose=0)\n",
        "        print(\"{} day output {}\".format(i,yhat))\n",
        "        temp_input.extend(yhat[0].tolist())\n",
        "        temp_input=temp_input[1:]\n",
        "\n",
        "        lst_output.extend(yhat.tolist())\n",
        "        i=i+1\n",
        "    else:\n",
        "        x_input = x_input.reshape((1, n_steps,1))\n",
        "        yhat = model.predict(x_input, verbose=0)\n",
        "        print(yhat[0])\n",
        "        temp_input.extend(yhat[0].tolist())\n",
        "        print(len(temp_input))\n",
        "        lst_output.extend(yhat.tolist())\n",
        "        i=i+1\n",
        "\n",
        "\n",
        "print(lst_output)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "0qvuYvNIsdmQ",
        "outputId": "70bc710f-50dd-4931-8b3b-31a86e10a950"
      },
      "execution_count": 120,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[1.0388536]\n",
            "101\n",
            "1 day input [0.30105993 0.30018319 0.29705574 0.29964668 0.29794557 0.30201519\n",
            " 0.29419    0.29498822 0.27140802 0.27859199 0.2967286  0.29616593\n",
            " 0.29451714 0.29951584 0.29747449 0.28425805 0.28216435 0.29039519\n",
            " 0.29344413 0.29930646 0.29958127 0.30370322 0.31557183 0.31678882\n",
            " 0.31922272 0.32212772 0.31555877 0.31104423 0.31376603 0.31258832\n",
            " 0.37147343 0.40870192 0.4081523  0.39311699 0.39153364 0.39141588\n",
            " 0.38930908 0.39475268 0.39442554 0.40667363 0.41839834 0.42049204\n",
            " 0.43089505 0.43722847 0.43222976 0.43646952 0.44015966 0.43730697\n",
            " 0.44977753 0.44022507 0.44364039 0.41512694 0.41944517 0.40973569\n",
            " 0.41283697 0.4110704  0.41752158 0.41926199 0.41511384 0.41163307\n",
            " 0.41885634 0.42361947 0.43580214 0.4408532  0.44998691 0.44829889\n",
            " 0.47853965 0.47525516 0.49378434 0.50803456 0.51006281 0.52789846\n",
            " 0.53578906 0.54323476 0.54250197 0.52198379 0.52673382 0.54234495\n",
            " 0.55902906 0.57019106 0.59311698 0.62331852 0.60918607 0.60501177\n",
            " 0.6661345  0.68322426 0.65781209 0.6512562  0.64734363 0.69536772\n",
            " 0.72462706 0.72808167 0.71842451 0.70952633 0.72114633 0.73958387\n",
            " 0.81786181 0.83063335 1.         1.03885365]\n",
            "1 day output [[1.0942167]]\n",
            "2 day input [0.30018319 0.29705574 0.29964668 0.29794557 0.30201519 0.29419\n",
            " 0.29498822 0.27140802 0.27859199 0.2967286  0.29616593 0.29451714\n",
            " 0.29951584 0.29747449 0.28425805 0.28216435 0.29039519 0.29344413\n",
            " 0.29930646 0.29958127 0.30370322 0.31557183 0.31678882 0.31922272\n",
            " 0.32212772 0.31555877 0.31104423 0.31376603 0.31258832 0.37147343\n",
            " 0.40870192 0.4081523  0.39311699 0.39153364 0.39141588 0.38930908\n",
            " 0.39475268 0.39442554 0.40667363 0.41839834 0.42049204 0.43089505\n",
            " 0.43722847 0.43222976 0.43646952 0.44015966 0.43730697 0.44977753\n",
            " 0.44022507 0.44364039 0.41512694 0.41944517 0.40973569 0.41283697\n",
            " 0.4110704  0.41752158 0.41926199 0.41511384 0.41163307 0.41885634\n",
            " 0.42361947 0.43580214 0.4408532  0.44998691 0.44829889 0.47853965\n",
            " 0.47525516 0.49378434 0.50803456 0.51006281 0.52789846 0.53578906\n",
            " 0.54323476 0.54250197 0.52198379 0.52673382 0.54234495 0.55902906\n",
            " 0.57019106 0.59311698 0.62331852 0.60918607 0.60501177 0.6661345\n",
            " 0.68322426 0.65781209 0.6512562  0.64734363 0.69536772 0.72462706\n",
            " 0.72808167 0.71842451 0.70952633 0.72114633 0.73958387 0.81786181\n",
            " 0.83063335 1.         1.03885365 1.0942167 ]\n",
            "2 day output [[1.1035451]]\n",
            "3 day input [0.29705574 0.29964668 0.29794557 0.30201519 0.29419    0.29498822\n",
            " 0.27140802 0.27859199 0.2967286  0.29616593 0.29451714 0.29951584\n",
            " 0.29747449 0.28425805 0.28216435 0.29039519 0.29344413 0.29930646\n",
            " 0.29958127 0.30370322 0.31557183 0.31678882 0.31922272 0.32212772\n",
            " 0.31555877 0.31104423 0.31376603 0.31258832 0.37147343 0.40870192\n",
            " 0.4081523  0.39311699 0.39153364 0.39141588 0.38930908 0.39475268\n",
            " 0.39442554 0.40667363 0.41839834 0.42049204 0.43089505 0.43722847\n",
            " 0.43222976 0.43646952 0.44015966 0.43730697 0.44977753 0.44022507\n",
            " 0.44364039 0.41512694 0.41944517 0.40973569 0.41283697 0.4110704\n",
            " 0.41752158 0.41926199 0.41511384 0.41163307 0.41885634 0.42361947\n",
            " 0.43580214 0.4408532  0.44998691 0.44829889 0.47853965 0.47525516\n",
            " 0.49378434 0.50803456 0.51006281 0.52789846 0.53578906 0.54323476\n",
            " 0.54250197 0.52198379 0.52673382 0.54234495 0.55902906 0.57019106\n",
            " 0.59311698 0.62331852 0.60918607 0.60501177 0.6661345  0.68322426\n",
            " 0.65781209 0.6512562  0.64734363 0.69536772 0.72462706 0.72808167\n",
            " 0.71842451 0.70952633 0.72114633 0.73958387 0.81786181 0.83063335\n",
            " 1.         1.03885365 1.0942167  1.10354507]\n",
            "3 day output [[1.0898957]]\n",
            "4 day input [0.29964668 0.29794557 0.30201519 0.29419    0.29498822 0.27140802\n",
            " 0.27859199 0.2967286  0.29616593 0.29451714 0.29951584 0.29747449\n",
            " 0.28425805 0.28216435 0.29039519 0.29344413 0.29930646 0.29958127\n",
            " 0.30370322 0.31557183 0.31678882 0.31922272 0.32212772 0.31555877\n",
            " 0.31104423 0.31376603 0.31258832 0.37147343 0.40870192 0.4081523\n",
            " 0.39311699 0.39153364 0.39141588 0.38930908 0.39475268 0.39442554\n",
            " 0.40667363 0.41839834 0.42049204 0.43089505 0.43722847 0.43222976\n",
            " 0.43646952 0.44015966 0.43730697 0.44977753 0.44022507 0.44364039\n",
            " 0.41512694 0.41944517 0.40973569 0.41283697 0.4110704  0.41752158\n",
            " 0.41926199 0.41511384 0.41163307 0.41885634 0.42361947 0.43580214\n",
            " 0.4408532  0.44998691 0.44829889 0.47853965 0.47525516 0.49378434\n",
            " 0.50803456 0.51006281 0.52789846 0.53578906 0.54323476 0.54250197\n",
            " 0.52198379 0.52673382 0.54234495 0.55902906 0.57019106 0.59311698\n",
            " 0.62331852 0.60918607 0.60501177 0.6661345  0.68322426 0.65781209\n",
            " 0.6512562  0.64734363 0.69536772 0.72462706 0.72808167 0.71842451\n",
            " 0.70952633 0.72114633 0.73958387 0.81786181 0.83063335 1.\n",
            " 1.03885365 1.0942167  1.10354507 1.08989573]\n",
            "4 day output [[1.062227]]\n",
            "5 day input [0.29794557 0.30201519 0.29419    0.29498822 0.27140802 0.27859199\n",
            " 0.2967286  0.29616593 0.29451714 0.29951584 0.29747449 0.28425805\n",
            " 0.28216435 0.29039519 0.29344413 0.29930646 0.29958127 0.30370322\n",
            " 0.31557183 0.31678882 0.31922272 0.32212772 0.31555877 0.31104423\n",
            " 0.31376603 0.31258832 0.37147343 0.40870192 0.4081523  0.39311699\n",
            " 0.39153364 0.39141588 0.38930908 0.39475268 0.39442554 0.40667363\n",
            " 0.41839834 0.42049204 0.43089505 0.43722847 0.43222976 0.43646952\n",
            " 0.44015966 0.43730697 0.44977753 0.44022507 0.44364039 0.41512694\n",
            " 0.41944517 0.40973569 0.41283697 0.4110704  0.41752158 0.41926199\n",
            " 0.41511384 0.41163307 0.41885634 0.42361947 0.43580214 0.4408532\n",
            " 0.44998691 0.44829889 0.47853965 0.47525516 0.49378434 0.50803456\n",
            " 0.51006281 0.52789846 0.53578906 0.54323476 0.54250197 0.52198379\n",
            " 0.52673382 0.54234495 0.55902906 0.57019106 0.59311698 0.62331852\n",
            " 0.60918607 0.60501177 0.6661345  0.68322426 0.65781209 0.6512562\n",
            " 0.64734363 0.69536772 0.72462706 0.72808167 0.71842451 0.70952633\n",
            " 0.72114633 0.73958387 0.81786181 0.83063335 1.         1.03885365\n",
            " 1.0942167  1.10354507 1.08989573 1.06222701]\n",
            "5 day output [[1.0275584]]\n",
            "6 day input [0.30201519 0.29419    0.29498822 0.27140802 0.27859199 0.2967286\n",
            " 0.29616593 0.29451714 0.29951584 0.29747449 0.28425805 0.28216435\n",
            " 0.29039519 0.29344413 0.29930646 0.29958127 0.30370322 0.31557183\n",
            " 0.31678882 0.31922272 0.32212772 0.31555877 0.31104423 0.31376603\n",
            " 0.31258832 0.37147343 0.40870192 0.4081523  0.39311699 0.39153364\n",
            " 0.39141588 0.38930908 0.39475268 0.39442554 0.40667363 0.41839834\n",
            " 0.42049204 0.43089505 0.43722847 0.43222976 0.43646952 0.44015966\n",
            " 0.43730697 0.44977753 0.44022507 0.44364039 0.41512694 0.41944517\n",
            " 0.40973569 0.41283697 0.4110704  0.41752158 0.41926199 0.41511384\n",
            " 0.41163307 0.41885634 0.42361947 0.43580214 0.4408532  0.44998691\n",
            " 0.44829889 0.47853965 0.47525516 0.49378434 0.50803456 0.51006281\n",
            " 0.52789846 0.53578906 0.54323476 0.54250197 0.52198379 0.52673382\n",
            " 0.54234495 0.55902906 0.57019106 0.59311698 0.62331852 0.60918607\n",
            " 0.60501177 0.6661345  0.68322426 0.65781209 0.6512562  0.64734363\n",
            " 0.69536772 0.72462706 0.72808167 0.71842451 0.70952633 0.72114633\n",
            " 0.73958387 0.81786181 0.83063335 1.         1.03885365 1.0942167\n",
            " 1.10354507 1.08989573 1.06222701 1.02755845]\n",
            "6 day output [[0.9929233]]\n",
            "7 day input [0.29419    0.29498822 0.27140802 0.27859199 0.2967286  0.29616593\n",
            " 0.29451714 0.29951584 0.29747449 0.28425805 0.28216435 0.29039519\n",
            " 0.29344413 0.29930646 0.29958127 0.30370322 0.31557183 0.31678882\n",
            " 0.31922272 0.32212772 0.31555877 0.31104423 0.31376603 0.31258832\n",
            " 0.37147343 0.40870192 0.4081523  0.39311699 0.39153364 0.39141588\n",
            " 0.38930908 0.39475268 0.39442554 0.40667363 0.41839834 0.42049204\n",
            " 0.43089505 0.43722847 0.43222976 0.43646952 0.44015966 0.43730697\n",
            " 0.44977753 0.44022507 0.44364039 0.41512694 0.41944517 0.40973569\n",
            " 0.41283697 0.4110704  0.41752158 0.41926199 0.41511384 0.41163307\n",
            " 0.41885634 0.42361947 0.43580214 0.4408532  0.44998691 0.44829889\n",
            " 0.47853965 0.47525516 0.49378434 0.50803456 0.51006281 0.52789846\n",
            " 0.53578906 0.54323476 0.54250197 0.52198379 0.52673382 0.54234495\n",
            " 0.55902906 0.57019106 0.59311698 0.62331852 0.60918607 0.60501177\n",
            " 0.6661345  0.68322426 0.65781209 0.6512562  0.64734363 0.69536772\n",
            " 0.72462706 0.72808167 0.71842451 0.70952633 0.72114633 0.73958387\n",
            " 0.81786181 0.83063335 1.         1.03885365 1.0942167  1.10354507\n",
            " 1.08989573 1.06222701 1.02755845 0.99292332]\n",
            "7 day output [[0.96389365]]\n",
            "8 day input [0.29498822 0.27140802 0.27859199 0.2967286  0.29616593 0.29451714\n",
            " 0.29951584 0.29747449 0.28425805 0.28216435 0.29039519 0.29344413\n",
            " 0.29930646 0.29958127 0.30370322 0.31557183 0.31678882 0.31922272\n",
            " 0.32212772 0.31555877 0.31104423 0.31376603 0.31258832 0.37147343\n",
            " 0.40870192 0.4081523  0.39311699 0.39153364 0.39141588 0.38930908\n",
            " 0.39475268 0.39442554 0.40667363 0.41839834 0.42049204 0.43089505\n",
            " 0.43722847 0.43222976 0.43646952 0.44015966 0.43730697 0.44977753\n",
            " 0.44022507 0.44364039 0.41512694 0.41944517 0.40973569 0.41283697\n",
            " 0.4110704  0.41752158 0.41926199 0.41511384 0.41163307 0.41885634\n",
            " 0.42361947 0.43580214 0.4408532  0.44998691 0.44829889 0.47853965\n",
            " 0.47525516 0.49378434 0.50803456 0.51006281 0.52789846 0.53578906\n",
            " 0.54323476 0.54250197 0.52198379 0.52673382 0.54234495 0.55902906\n",
            " 0.57019106 0.59311698 0.62331852 0.60918607 0.60501177 0.6661345\n",
            " 0.68322426 0.65781209 0.6512562  0.64734363 0.69536772 0.72462706\n",
            " 0.72808167 0.71842451 0.70952633 0.72114633 0.73958387 0.81786181\n",
            " 0.83063335 1.         1.03885365 1.0942167  1.10354507 1.08989573\n",
            " 1.06222701 1.02755845 0.99292332 0.96389365]\n",
            "8 day output [[0.9430904]]\n",
            "9 day input [0.27140802 0.27859199 0.2967286  0.29616593 0.29451714 0.29951584\n",
            " 0.29747449 0.28425805 0.28216435 0.29039519 0.29344413 0.29930646\n",
            " 0.29958127 0.30370322 0.31557183 0.31678882 0.31922272 0.32212772\n",
            " 0.31555877 0.31104423 0.31376603 0.31258832 0.37147343 0.40870192\n",
            " 0.4081523  0.39311699 0.39153364 0.39141588 0.38930908 0.39475268\n",
            " 0.39442554 0.40667363 0.41839834 0.42049204 0.43089505 0.43722847\n",
            " 0.43222976 0.43646952 0.44015966 0.43730697 0.44977753 0.44022507\n",
            " 0.44364039 0.41512694 0.41944517 0.40973569 0.41283697 0.4110704\n",
            " 0.41752158 0.41926199 0.41511384 0.41163307 0.41885634 0.42361947\n",
            " 0.43580214 0.4408532  0.44998691 0.44829889 0.47853965 0.47525516\n",
            " 0.49378434 0.50803456 0.51006281 0.52789846 0.53578906 0.54323476\n",
            " 0.54250197 0.52198379 0.52673382 0.54234495 0.55902906 0.57019106\n",
            " 0.59311698 0.62331852 0.60918607 0.60501177 0.6661345  0.68322426\n",
            " 0.65781209 0.6512562  0.64734363 0.69536772 0.72462706 0.72808167\n",
            " 0.71842451 0.70952633 0.72114633 0.73958387 0.81786181 0.83063335\n",
            " 1.         1.03885365 1.0942167  1.10354507 1.08989573 1.06222701\n",
            " 1.02755845 0.99292332 0.96389365 0.94309038]\n",
            "9 day output [[0.93260604]]\n",
            "10 day input [0.27859199 0.2967286  0.29616593 0.29451714 0.29951584 0.29747449\n",
            " 0.28425805 0.28216435 0.29039519 0.29344413 0.29930646 0.29958127\n",
            " 0.30370322 0.31557183 0.31678882 0.31922272 0.32212772 0.31555877\n",
            " 0.31104423 0.31376603 0.31258832 0.37147343 0.40870192 0.4081523\n",
            " 0.39311699 0.39153364 0.39141588 0.38930908 0.39475268 0.39442554\n",
            " 0.40667363 0.41839834 0.42049204 0.43089505 0.43722847 0.43222976\n",
            " 0.43646952 0.44015966 0.43730697 0.44977753 0.44022507 0.44364039\n",
            " 0.41512694 0.41944517 0.40973569 0.41283697 0.4110704  0.41752158\n",
            " 0.41926199 0.41511384 0.41163307 0.41885634 0.42361947 0.43580214\n",
            " 0.4408532  0.44998691 0.44829889 0.47853965 0.47525516 0.49378434\n",
            " 0.50803456 0.51006281 0.52789846 0.53578906 0.54323476 0.54250197\n",
            " 0.52198379 0.52673382 0.54234495 0.55902906 0.57019106 0.59311698\n",
            " 0.62331852 0.60918607 0.60501177 0.6661345  0.68322426 0.65781209\n",
            " 0.6512562  0.64734363 0.69536772 0.72462706 0.72808167 0.71842451\n",
            " 0.70952633 0.72114633 0.73958387 0.81786181 0.83063335 1.\n",
            " 1.03885365 1.0942167  1.10354507 1.08989573 1.06222701 1.02755845\n",
            " 0.99292332 0.96389365 0.94309038 0.93260604]\n",
            "10 day output [[0.9320769]]\n",
            "11 day input [0.2967286  0.29616593 0.29451714 0.29951584 0.29747449 0.28425805\n",
            " 0.28216435 0.29039519 0.29344413 0.29930646 0.29958127 0.30370322\n",
            " 0.31557183 0.31678882 0.31922272 0.32212772 0.31555877 0.31104423\n",
            " 0.31376603 0.31258832 0.37147343 0.40870192 0.4081523  0.39311699\n",
            " 0.39153364 0.39141588 0.38930908 0.39475268 0.39442554 0.40667363\n",
            " 0.41839834 0.42049204 0.43089505 0.43722847 0.43222976 0.43646952\n",
            " 0.44015966 0.43730697 0.44977753 0.44022507 0.44364039 0.41512694\n",
            " 0.41944517 0.40973569 0.41283697 0.4110704  0.41752158 0.41926199\n",
            " 0.41511384 0.41163307 0.41885634 0.42361947 0.43580214 0.4408532\n",
            " 0.44998691 0.44829889 0.47853965 0.47525516 0.49378434 0.50803456\n",
            " 0.51006281 0.52789846 0.53578906 0.54323476 0.54250197 0.52198379\n",
            " 0.52673382 0.54234495 0.55902906 0.57019106 0.59311698 0.62331852\n",
            " 0.60918607 0.60501177 0.6661345  0.68322426 0.65781209 0.6512562\n",
            " 0.64734363 0.69536772 0.72462706 0.72808167 0.71842451 0.70952633\n",
            " 0.72114633 0.73958387 0.81786181 0.83063335 1.         1.03885365\n",
            " 1.0942167  1.10354507 1.08989573 1.06222701 1.02755845 0.99292332\n",
            " 0.96389365 0.94309038 0.93260604 0.93207687]\n",
            "11 day output [[0.9398442]]\n",
            "12 day input [0.29616593 0.29451714 0.29951584 0.29747449 0.28425805 0.28216435\n",
            " 0.29039519 0.29344413 0.29930646 0.29958127 0.30370322 0.31557183\n",
            " 0.31678882 0.31922272 0.32212772 0.31555877 0.31104423 0.31376603\n",
            " 0.31258832 0.37147343 0.40870192 0.4081523  0.39311699 0.39153364\n",
            " 0.39141588 0.38930908 0.39475268 0.39442554 0.40667363 0.41839834\n",
            " 0.42049204 0.43089505 0.43722847 0.43222976 0.43646952 0.44015966\n",
            " 0.43730697 0.44977753 0.44022507 0.44364039 0.41512694 0.41944517\n",
            " 0.40973569 0.41283697 0.4110704  0.41752158 0.41926199 0.41511384\n",
            " 0.41163307 0.41885634 0.42361947 0.43580214 0.4408532  0.44998691\n",
            " 0.44829889 0.47853965 0.47525516 0.49378434 0.50803456 0.51006281\n",
            " 0.52789846 0.53578906 0.54323476 0.54250197 0.52198379 0.52673382\n",
            " 0.54234495 0.55902906 0.57019106 0.59311698 0.62331852 0.60918607\n",
            " 0.60501177 0.6661345  0.68322426 0.65781209 0.6512562  0.64734363\n",
            " 0.69536772 0.72462706 0.72808167 0.71842451 0.70952633 0.72114633\n",
            " 0.73958387 0.81786181 0.83063335 1.         1.03885365 1.0942167\n",
            " 1.10354507 1.08989573 1.06222701 1.02755845 0.99292332 0.96389365\n",
            " 0.94309038 0.93260604 0.93207687 0.93984419]\n",
            "12 day output [[0.95372486]]\n",
            "13 day input [0.29451714 0.29951584 0.29747449 0.28425805 0.28216435 0.29039519\n",
            " 0.29344413 0.29930646 0.29958127 0.30370322 0.31557183 0.31678882\n",
            " 0.31922272 0.32212772 0.31555877 0.31104423 0.31376603 0.31258832\n",
            " 0.37147343 0.40870192 0.4081523  0.39311699 0.39153364 0.39141588\n",
            " 0.38930908 0.39475268 0.39442554 0.40667363 0.41839834 0.42049204\n",
            " 0.43089505 0.43722847 0.43222976 0.43646952 0.44015966 0.43730697\n",
            " 0.44977753 0.44022507 0.44364039 0.41512694 0.41944517 0.40973569\n",
            " 0.41283697 0.4110704  0.41752158 0.41926199 0.41511384 0.41163307\n",
            " 0.41885634 0.42361947 0.43580214 0.4408532  0.44998691 0.44829889\n",
            " 0.47853965 0.47525516 0.49378434 0.50803456 0.51006281 0.52789846\n",
            " 0.53578906 0.54323476 0.54250197 0.52198379 0.52673382 0.54234495\n",
            " 0.55902906 0.57019106 0.59311698 0.62331852 0.60918607 0.60501177\n",
            " 0.6661345  0.68322426 0.65781209 0.6512562  0.64734363 0.69536772\n",
            " 0.72462706 0.72808167 0.71842451 0.70952633 0.72114633 0.73958387\n",
            " 0.81786181 0.83063335 1.         1.03885365 1.0942167  1.10354507\n",
            " 1.08989573 1.06222701 1.02755845 0.99292332 0.96389365 0.94309038\n",
            " 0.93260604 0.93207687 0.93984419 0.95372486]\n",
            "13 day output [[0.97124195]]\n",
            "14 day input [0.29951584 0.29747449 0.28425805 0.28216435 0.29039519 0.29344413\n",
            " 0.29930646 0.29958127 0.30370322 0.31557183 0.31678882 0.31922272\n",
            " 0.32212772 0.31555877 0.31104423 0.31376603 0.31258832 0.37147343\n",
            " 0.40870192 0.4081523  0.39311699 0.39153364 0.39141588 0.38930908\n",
            " 0.39475268 0.39442554 0.40667363 0.41839834 0.42049204 0.43089505\n",
            " 0.43722847 0.43222976 0.43646952 0.44015966 0.43730697 0.44977753\n",
            " 0.44022507 0.44364039 0.41512694 0.41944517 0.40973569 0.41283697\n",
            " 0.4110704  0.41752158 0.41926199 0.41511384 0.41163307 0.41885634\n",
            " 0.42361947 0.43580214 0.4408532  0.44998691 0.44829889 0.47853965\n",
            " 0.47525516 0.49378434 0.50803456 0.51006281 0.52789846 0.53578906\n",
            " 0.54323476 0.54250197 0.52198379 0.52673382 0.54234495 0.55902906\n",
            " 0.57019106 0.59311698 0.62331852 0.60918607 0.60501177 0.6661345\n",
            " 0.68322426 0.65781209 0.6512562  0.64734363 0.69536772 0.72462706\n",
            " 0.72808167 0.71842451 0.70952633 0.72114633 0.73958387 0.81786181\n",
            " 0.83063335 1.         1.03885365 1.0942167  1.10354507 1.08989573\n",
            " 1.06222701 1.02755845 0.99292332 0.96389365 0.94309038 0.93260604\n",
            " 0.93207687 0.93984419 0.95372486 0.97124195]\n",
            "14 day output [[0.9899437]]\n",
            "15 day input [0.29747449 0.28425805 0.28216435 0.29039519 0.29344413 0.29930646\n",
            " 0.29958127 0.30370322 0.31557183 0.31678882 0.31922272 0.32212772\n",
            " 0.31555877 0.31104423 0.31376603 0.31258832 0.37147343 0.40870192\n",
            " 0.4081523  0.39311699 0.39153364 0.39141588 0.38930908 0.39475268\n",
            " 0.39442554 0.40667363 0.41839834 0.42049204 0.43089505 0.43722847\n",
            " 0.43222976 0.43646952 0.44015966 0.43730697 0.44977753 0.44022507\n",
            " 0.44364039 0.41512694 0.41944517 0.40973569 0.41283697 0.4110704\n",
            " 0.41752158 0.41926199 0.41511384 0.41163307 0.41885634 0.42361947\n",
            " 0.43580214 0.4408532  0.44998691 0.44829889 0.47853965 0.47525516\n",
            " 0.49378434 0.50803456 0.51006281 0.52789846 0.53578906 0.54323476\n",
            " 0.54250197 0.52198379 0.52673382 0.54234495 0.55902906 0.57019106\n",
            " 0.59311698 0.62331852 0.60918607 0.60501177 0.6661345  0.68322426\n",
            " 0.65781209 0.6512562  0.64734363 0.69536772 0.72462706 0.72808167\n",
            " 0.71842451 0.70952633 0.72114633 0.73958387 0.81786181 0.83063335\n",
            " 1.         1.03885365 1.0942167  1.10354507 1.08989573 1.06222701\n",
            " 1.02755845 0.99292332 0.96389365 0.94309038 0.93260604 0.93207687\n",
            " 0.93984419 0.95372486 0.97124195 0.98994368]\n",
            "15 day output [[1.0076842]]\n",
            "16 day input [0.28425805 0.28216435 0.29039519 0.29344413 0.29930646 0.29958127\n",
            " 0.30370322 0.31557183 0.31678882 0.31922272 0.32212772 0.31555877\n",
            " 0.31104423 0.31376603 0.31258832 0.37147343 0.40870192 0.4081523\n",
            " 0.39311699 0.39153364 0.39141588 0.38930908 0.39475268 0.39442554\n",
            " 0.40667363 0.41839834 0.42049204 0.43089505 0.43722847 0.43222976\n",
            " 0.43646952 0.44015966 0.43730697 0.44977753 0.44022507 0.44364039\n",
            " 0.41512694 0.41944517 0.40973569 0.41283697 0.4110704  0.41752158\n",
            " 0.41926199 0.41511384 0.41163307 0.41885634 0.42361947 0.43580214\n",
            " 0.4408532  0.44998691 0.44829889 0.47853965 0.47525516 0.49378434\n",
            " 0.50803456 0.51006281 0.52789846 0.53578906 0.54323476 0.54250197\n",
            " 0.52198379 0.52673382 0.54234495 0.55902906 0.57019106 0.59311698\n",
            " 0.62331852 0.60918607 0.60501177 0.6661345  0.68322426 0.65781209\n",
            " 0.6512562  0.64734363 0.69536772 0.72462706 0.72808167 0.71842451\n",
            " 0.70952633 0.72114633 0.73958387 0.81786181 0.83063335 1.\n",
            " 1.03885365 1.0942167  1.10354507 1.08989573 1.06222701 1.02755845\n",
            " 0.99292332 0.96389365 0.94309038 0.93260604 0.93207687 0.93984419\n",
            " 0.95372486 0.97124195 0.98994368 1.00768423]\n",
            "16 day output [[1.0228088]]\n",
            "17 day input [0.28216435 0.29039519 0.29344413 0.29930646 0.29958127 0.30370322\n",
            " 0.31557183 0.31678882 0.31922272 0.32212772 0.31555877 0.31104423\n",
            " 0.31376603 0.31258832 0.37147343 0.40870192 0.4081523  0.39311699\n",
            " 0.39153364 0.39141588 0.38930908 0.39475268 0.39442554 0.40667363\n",
            " 0.41839834 0.42049204 0.43089505 0.43722847 0.43222976 0.43646952\n",
            " 0.44015966 0.43730697 0.44977753 0.44022507 0.44364039 0.41512694\n",
            " 0.41944517 0.40973569 0.41283697 0.4110704  0.41752158 0.41926199\n",
            " 0.41511384 0.41163307 0.41885634 0.42361947 0.43580214 0.4408532\n",
            " 0.44998691 0.44829889 0.47853965 0.47525516 0.49378434 0.50803456\n",
            " 0.51006281 0.52789846 0.53578906 0.54323476 0.54250197 0.52198379\n",
            " 0.52673382 0.54234495 0.55902906 0.57019106 0.59311698 0.62331852\n",
            " 0.60918607 0.60501177 0.6661345  0.68322426 0.65781209 0.6512562\n",
            " 0.64734363 0.69536772 0.72462706 0.72808167 0.71842451 0.70952633\n",
            " 0.72114633 0.73958387 0.81786181 0.83063335 1.         1.03885365\n",
            " 1.0942167  1.10354507 1.08989573 1.06222701 1.02755845 0.99292332\n",
            " 0.96389365 0.94309038 0.93260604 0.93207687 0.93984419 0.95372486\n",
            " 0.97124195 0.98994368 1.00768423 1.02280879]\n",
            "17 day output [[1.0335296]]\n",
            "18 day input [0.29039519 0.29344413 0.29930646 0.29958127 0.30370322 0.31557183\n",
            " 0.31678882 0.31922272 0.32212772 0.31555877 0.31104423 0.31376603\n",
            " 0.31258832 0.37147343 0.40870192 0.4081523  0.39311699 0.39153364\n",
            " 0.39141588 0.38930908 0.39475268 0.39442554 0.40667363 0.41839834\n",
            " 0.42049204 0.43089505 0.43722847 0.43222976 0.43646952 0.44015966\n",
            " 0.43730697 0.44977753 0.44022507 0.44364039 0.41512694 0.41944517\n",
            " 0.40973569 0.41283697 0.4110704  0.41752158 0.41926199 0.41511384\n",
            " 0.41163307 0.41885634 0.42361947 0.43580214 0.4408532  0.44998691\n",
            " 0.44829889 0.47853965 0.47525516 0.49378434 0.50803456 0.51006281\n",
            " 0.52789846 0.53578906 0.54323476 0.54250197 0.52198379 0.52673382\n",
            " 0.54234495 0.55902906 0.57019106 0.59311698 0.62331852 0.60918607\n",
            " 0.60501177 0.6661345  0.68322426 0.65781209 0.6512562  0.64734363\n",
            " 0.69536772 0.72462706 0.72808167 0.71842451 0.70952633 0.72114633\n",
            " 0.73958387 0.81786181 0.83063335 1.         1.03885365 1.0942167\n",
            " 1.10354507 1.08989573 1.06222701 1.02755845 0.99292332 0.96389365\n",
            " 0.94309038 0.93260604 0.93207687 0.93984419 0.95372486 0.97124195\n",
            " 0.98994368 1.00768423 1.02280879 1.03352964]\n",
            "18 day output [[1.0401881]]\n",
            "19 day input [0.29344413 0.29930646 0.29958127 0.30370322 0.31557183 0.31678882\n",
            " 0.31922272 0.32212772 0.31555877 0.31104423 0.31376603 0.31258832\n",
            " 0.37147343 0.40870192 0.4081523  0.39311699 0.39153364 0.39141588\n",
            " 0.38930908 0.39475268 0.39442554 0.40667363 0.41839834 0.42049204\n",
            " 0.43089505 0.43722847 0.43222976 0.43646952 0.44015966 0.43730697\n",
            " 0.44977753 0.44022507 0.44364039 0.41512694 0.41944517 0.40973569\n",
            " 0.41283697 0.4110704  0.41752158 0.41926199 0.41511384 0.41163307\n",
            " 0.41885634 0.42361947 0.43580214 0.4408532  0.44998691 0.44829889\n",
            " 0.47853965 0.47525516 0.49378434 0.50803456 0.51006281 0.52789846\n",
            " 0.53578906 0.54323476 0.54250197 0.52198379 0.52673382 0.54234495\n",
            " 0.55902906 0.57019106 0.59311698 0.62331852 0.60918607 0.60501177\n",
            " 0.6661345  0.68322426 0.65781209 0.6512562  0.64734363 0.69536772\n",
            " 0.72462706 0.72808167 0.71842451 0.70952633 0.72114633 0.73958387\n",
            " 0.81786181 0.83063335 1.         1.03885365 1.0942167  1.10354507\n",
            " 1.08989573 1.06222701 1.02755845 0.99292332 0.96389365 0.94309038\n",
            " 0.93260604 0.93207687 0.93984419 0.95372486 0.97124195 0.98994368\n",
            " 1.00768423 1.02280879 1.03352964 1.04018807]\n",
            "19 day output [[1.0427935]]\n",
            "20 day input [0.29930646 0.29958127 0.30370322 0.31557183 0.31678882 0.31922272\n",
            " 0.32212772 0.31555877 0.31104423 0.31376603 0.31258832 0.37147343\n",
            " 0.40870192 0.4081523  0.39311699 0.39153364 0.39141588 0.38930908\n",
            " 0.39475268 0.39442554 0.40667363 0.41839834 0.42049204 0.43089505\n",
            " 0.43722847 0.43222976 0.43646952 0.44015966 0.43730697 0.44977753\n",
            " 0.44022507 0.44364039 0.41512694 0.41944517 0.40973569 0.41283697\n",
            " 0.4110704  0.41752158 0.41926199 0.41511384 0.41163307 0.41885634\n",
            " 0.42361947 0.43580214 0.4408532  0.44998691 0.44829889 0.47853965\n",
            " 0.47525516 0.49378434 0.50803456 0.51006281 0.52789846 0.53578906\n",
            " 0.54323476 0.54250197 0.52198379 0.52673382 0.54234495 0.55902906\n",
            " 0.57019106 0.59311698 0.62331852 0.60918607 0.60501177 0.6661345\n",
            " 0.68322426 0.65781209 0.6512562  0.64734363 0.69536772 0.72462706\n",
            " 0.72808167 0.71842451 0.70952633 0.72114633 0.73958387 0.81786181\n",
            " 0.83063335 1.         1.03885365 1.0942167  1.10354507 1.08989573\n",
            " 1.06222701 1.02755845 0.99292332 0.96389365 0.94309038 0.93260604\n",
            " 0.93207687 0.93984419 0.95372486 0.97124195 0.98994368 1.00768423\n",
            " 1.02280879 1.03352964 1.04018807 1.04279351]\n",
            "20 day output [[1.0421194]]\n",
            "21 day input [0.29958127 0.30370322 0.31557183 0.31678882 0.31922272 0.32212772\n",
            " 0.31555877 0.31104423 0.31376603 0.31258832 0.37147343 0.40870192\n",
            " 0.4081523  0.39311699 0.39153364 0.39141588 0.38930908 0.39475268\n",
            " 0.39442554 0.40667363 0.41839834 0.42049204 0.43089505 0.43722847\n",
            " 0.43222976 0.43646952 0.44015966 0.43730697 0.44977753 0.44022507\n",
            " 0.44364039 0.41512694 0.41944517 0.40973569 0.41283697 0.4110704\n",
            " 0.41752158 0.41926199 0.41511384 0.41163307 0.41885634 0.42361947\n",
            " 0.43580214 0.4408532  0.44998691 0.44829889 0.47853965 0.47525516\n",
            " 0.49378434 0.50803456 0.51006281 0.52789846 0.53578906 0.54323476\n",
            " 0.54250197 0.52198379 0.52673382 0.54234495 0.55902906 0.57019106\n",
            " 0.59311698 0.62331852 0.60918607 0.60501177 0.6661345  0.68322426\n",
            " 0.65781209 0.6512562  0.64734363 0.69536772 0.72462706 0.72808167\n",
            " 0.71842451 0.70952633 0.72114633 0.73958387 0.81786181 0.83063335\n",
            " 1.         1.03885365 1.0942167  1.10354507 1.08989573 1.06222701\n",
            " 1.02755845 0.99292332 0.96389365 0.94309038 0.93260604 0.93207687\n",
            " 0.93984419 0.95372486 0.97124195 0.98994368 1.00768423 1.02280879\n",
            " 1.03352964 1.04018807 1.04279351 1.04211938]\n",
            "21 day output [[1.0393269]]\n",
            "22 day input [0.30370322 0.31557183 0.31678882 0.31922272 0.32212772 0.31555877\n",
            " 0.31104423 0.31376603 0.31258832 0.37147343 0.40870192 0.4081523\n",
            " 0.39311699 0.39153364 0.39141588 0.38930908 0.39475268 0.39442554\n",
            " 0.40667363 0.41839834 0.42049204 0.43089505 0.43722847 0.43222976\n",
            " 0.43646952 0.44015966 0.43730697 0.44977753 0.44022507 0.44364039\n",
            " 0.41512694 0.41944517 0.40973569 0.41283697 0.4110704  0.41752158\n",
            " 0.41926199 0.41511384 0.41163307 0.41885634 0.42361947 0.43580214\n",
            " 0.4408532  0.44998691 0.44829889 0.47853965 0.47525516 0.49378434\n",
            " 0.50803456 0.51006281 0.52789846 0.53578906 0.54323476 0.54250197\n",
            " 0.52198379 0.52673382 0.54234495 0.55902906 0.57019106 0.59311698\n",
            " 0.62331852 0.60918607 0.60501177 0.6661345  0.68322426 0.65781209\n",
            " 0.6512562  0.64734363 0.69536772 0.72462706 0.72808167 0.71842451\n",
            " 0.70952633 0.72114633 0.73958387 0.81786181 0.83063335 1.\n",
            " 1.03885365 1.0942167  1.10354507 1.08989573 1.06222701 1.02755845\n",
            " 0.99292332 0.96389365 0.94309038 0.93260604 0.93207687 0.93984419\n",
            " 0.95372486 0.97124195 0.98994368 1.00768423 1.02280879 1.03352964\n",
            " 1.04018807 1.04279351 1.04211938 1.03932691]\n",
            "22 day output [[1.0356579]]\n",
            "23 day input [0.31557183 0.31678882 0.31922272 0.32212772 0.31555877 0.31104423\n",
            " 0.31376603 0.31258832 0.37147343 0.40870192 0.4081523  0.39311699\n",
            " 0.39153364 0.39141588 0.38930908 0.39475268 0.39442554 0.40667363\n",
            " 0.41839834 0.42049204 0.43089505 0.43722847 0.43222976 0.43646952\n",
            " 0.44015966 0.43730697 0.44977753 0.44022507 0.44364039 0.41512694\n",
            " 0.41944517 0.40973569 0.41283697 0.4110704  0.41752158 0.41926199\n",
            " 0.41511384 0.41163307 0.41885634 0.42361947 0.43580214 0.4408532\n",
            " 0.44998691 0.44829889 0.47853965 0.47525516 0.49378434 0.50803456\n",
            " 0.51006281 0.52789846 0.53578906 0.54323476 0.54250197 0.52198379\n",
            " 0.52673382 0.54234495 0.55902906 0.57019106 0.59311698 0.62331852\n",
            " 0.60918607 0.60501177 0.6661345  0.68322426 0.65781209 0.6512562\n",
            " 0.64734363 0.69536772 0.72462706 0.72808167 0.71842451 0.70952633\n",
            " 0.72114633 0.73958387 0.81786181 0.83063335 1.         1.03885365\n",
            " 1.0942167  1.10354507 1.08989573 1.06222701 1.02755845 0.99292332\n",
            " 0.96389365 0.94309038 0.93260604 0.93207687 0.93984419 0.95372486\n",
            " 0.97124195 0.98994368 1.00768423 1.02280879 1.03352964 1.04018807\n",
            " 1.04279351 1.04211938 1.03932691 1.03565788]\n",
            "23 day output [[1.0322175]]\n",
            "24 day input [0.31678882 0.31922272 0.32212772 0.31555877 0.31104423 0.31376603\n",
            " 0.31258832 0.37147343 0.40870192 0.4081523  0.39311699 0.39153364\n",
            " 0.39141588 0.38930908 0.39475268 0.39442554 0.40667363 0.41839834\n",
            " 0.42049204 0.43089505 0.43722847 0.43222976 0.43646952 0.44015966\n",
            " 0.43730697 0.44977753 0.44022507 0.44364039 0.41512694 0.41944517\n",
            " 0.40973569 0.41283697 0.4110704  0.41752158 0.41926199 0.41511384\n",
            " 0.41163307 0.41885634 0.42361947 0.43580214 0.4408532  0.44998691\n",
            " 0.44829889 0.47853965 0.47525516 0.49378434 0.50803456 0.51006281\n",
            " 0.52789846 0.53578906 0.54323476 0.54250197 0.52198379 0.52673382\n",
            " 0.54234495 0.55902906 0.57019106 0.59311698 0.62331852 0.60918607\n",
            " 0.60501177 0.6661345  0.68322426 0.65781209 0.6512562  0.64734363\n",
            " 0.69536772 0.72462706 0.72808167 0.71842451 0.70952633 0.72114633\n",
            " 0.73958387 0.81786181 0.83063335 1.         1.03885365 1.0942167\n",
            " 1.10354507 1.08989573 1.06222701 1.02755845 0.99292332 0.96389365\n",
            " 0.94309038 0.93260604 0.93207687 0.93984419 0.95372486 0.97124195\n",
            " 0.98994368 1.00768423 1.02280879 1.03352964 1.04018807 1.04279351\n",
            " 1.04211938 1.03932691 1.03565788 1.0322175 ]\n",
            "24 day output [[1.0298227]]\n",
            "25 day input [0.31922272 0.32212772 0.31555877 0.31104423 0.31376603 0.31258832\n",
            " 0.37147343 0.40870192 0.4081523  0.39311699 0.39153364 0.39141588\n",
            " 0.38930908 0.39475268 0.39442554 0.40667363 0.41839834 0.42049204\n",
            " 0.43089505 0.43722847 0.43222976 0.43646952 0.44015966 0.43730697\n",
            " 0.44977753 0.44022507 0.44364039 0.41512694 0.41944517 0.40973569\n",
            " 0.41283697 0.4110704  0.41752158 0.41926199 0.41511384 0.41163307\n",
            " 0.41885634 0.42361947 0.43580214 0.4408532  0.44998691 0.44829889\n",
            " 0.47853965 0.47525516 0.49378434 0.50803456 0.51006281 0.52789846\n",
            " 0.53578906 0.54323476 0.54250197 0.52198379 0.52673382 0.54234495\n",
            " 0.55902906 0.57019106 0.59311698 0.62331852 0.60918607 0.60501177\n",
            " 0.6661345  0.68322426 0.65781209 0.6512562  0.64734363 0.69536772\n",
            " 0.72462706 0.72808167 0.71842451 0.70952633 0.72114633 0.73958387\n",
            " 0.81786181 0.83063335 1.         1.03885365 1.0942167  1.10354507\n",
            " 1.08989573 1.06222701 1.02755845 0.99292332 0.96389365 0.94309038\n",
            " 0.93260604 0.93207687 0.93984419 0.95372486 0.97124195 0.98994368\n",
            " 1.00768423 1.02280879 1.03352964 1.04018807 1.04279351 1.04211938\n",
            " 1.03932691 1.03565788 1.0322175  1.02982271]\n",
            "25 day output [[1.028936]]\n",
            "26 day input [0.32212772 0.31555877 0.31104423 0.31376603 0.31258832 0.37147343\n",
            " 0.40870192 0.4081523  0.39311699 0.39153364 0.39141588 0.38930908\n",
            " 0.39475268 0.39442554 0.40667363 0.41839834 0.42049204 0.43089505\n",
            " 0.43722847 0.43222976 0.43646952 0.44015966 0.43730697 0.44977753\n",
            " 0.44022507 0.44364039 0.41512694 0.41944517 0.40973569 0.41283697\n",
            " 0.4110704  0.41752158 0.41926199 0.41511384 0.41163307 0.41885634\n",
            " 0.42361947 0.43580214 0.4408532  0.44998691 0.44829889 0.47853965\n",
            " 0.47525516 0.49378434 0.50803456 0.51006281 0.52789846 0.53578906\n",
            " 0.54323476 0.54250197 0.52198379 0.52673382 0.54234495 0.55902906\n",
            " 0.57019106 0.59311698 0.62331852 0.60918607 0.60501177 0.6661345\n",
            " 0.68322426 0.65781209 0.6512562  0.64734363 0.69536772 0.72462706\n",
            " 0.72808167 0.71842451 0.70952633 0.72114633 0.73958387 0.81786181\n",
            " 0.83063335 1.         1.03885365 1.0942167  1.10354507 1.08989573\n",
            " 1.06222701 1.02755845 0.99292332 0.96389365 0.94309038 0.93260604\n",
            " 0.93207687 0.93984419 0.95372486 0.97124195 0.98994368 1.00768423\n",
            " 1.02280879 1.03352964 1.04018807 1.04279351 1.04211938 1.03932691\n",
            " 1.03565788 1.0322175  1.02982271 1.02893603]\n",
            "26 day output [[1.0296706]]\n",
            "27 day input [0.31555877 0.31104423 0.31376603 0.31258832 0.37147343 0.40870192\n",
            " 0.4081523  0.39311699 0.39153364 0.39141588 0.38930908 0.39475268\n",
            " 0.39442554 0.40667363 0.41839834 0.42049204 0.43089505 0.43722847\n",
            " 0.43222976 0.43646952 0.44015966 0.43730697 0.44977753 0.44022507\n",
            " 0.44364039 0.41512694 0.41944517 0.40973569 0.41283697 0.4110704\n",
            " 0.41752158 0.41926199 0.41511384 0.41163307 0.41885634 0.42361947\n",
            " 0.43580214 0.4408532  0.44998691 0.44829889 0.47853965 0.47525516\n",
            " 0.49378434 0.50803456 0.51006281 0.52789846 0.53578906 0.54323476\n",
            " 0.54250197 0.52198379 0.52673382 0.54234495 0.55902906 0.57019106\n",
            " 0.59311698 0.62331852 0.60918607 0.60501177 0.6661345  0.68322426\n",
            " 0.65781209 0.6512562  0.64734363 0.69536772 0.72462706 0.72808167\n",
            " 0.71842451 0.70952633 0.72114633 0.73958387 0.81786181 0.83063335\n",
            " 1.         1.03885365 1.0942167  1.10354507 1.08989573 1.06222701\n",
            " 1.02755845 0.99292332 0.96389365 0.94309038 0.93260604 0.93207687\n",
            " 0.93984419 0.95372486 0.97124195 0.98994368 1.00768423 1.02280879\n",
            " 1.03352964 1.04018807 1.04279351 1.04211938 1.03932691 1.03565788\n",
            " 1.0322175  1.02982271 1.02893603 1.0296706 ]\n",
            "27 day output [[1.0318545]]\n",
            "28 day input [0.31104423 0.31376603 0.31258832 0.37147343 0.40870192 0.4081523\n",
            " 0.39311699 0.39153364 0.39141588 0.38930908 0.39475268 0.39442554\n",
            " 0.40667363 0.41839834 0.42049204 0.43089505 0.43722847 0.43222976\n",
            " 0.43646952 0.44015966 0.43730697 0.44977753 0.44022507 0.44364039\n",
            " 0.41512694 0.41944517 0.40973569 0.41283697 0.4110704  0.41752158\n",
            " 0.41926199 0.41511384 0.41163307 0.41885634 0.42361947 0.43580214\n",
            " 0.4408532  0.44998691 0.44829889 0.47853965 0.47525516 0.49378434\n",
            " 0.50803456 0.51006281 0.52789846 0.53578906 0.54323476 0.54250197\n",
            " 0.52198379 0.52673382 0.54234495 0.55902906 0.57019106 0.59311698\n",
            " 0.62331852 0.60918607 0.60501177 0.6661345  0.68322426 0.65781209\n",
            " 0.6512562  0.64734363 0.69536772 0.72462706 0.72808167 0.71842451\n",
            " 0.70952633 0.72114633 0.73958387 0.81786181 0.83063335 1.\n",
            " 1.03885365 1.0942167  1.10354507 1.08989573 1.06222701 1.02755845\n",
            " 0.99292332 0.96389365 0.94309038 0.93260604 0.93207687 0.93984419\n",
            " 0.95372486 0.97124195 0.98994368 1.00768423 1.02280879 1.03352964\n",
            " 1.04018807 1.04279351 1.04211938 1.03932691 1.03565788 1.0322175\n",
            " 1.02982271 1.02893603 1.0296706  1.03185451]\n",
            "28 day output [[1.0351205]]\n",
            "29 day input [0.31376603 0.31258832 0.37147343 0.40870192 0.4081523  0.39311699\n",
            " 0.39153364 0.39141588 0.38930908 0.39475268 0.39442554 0.40667363\n",
            " 0.41839834 0.42049204 0.43089505 0.43722847 0.43222976 0.43646952\n",
            " 0.44015966 0.43730697 0.44977753 0.44022507 0.44364039 0.41512694\n",
            " 0.41944517 0.40973569 0.41283697 0.4110704  0.41752158 0.41926199\n",
            " 0.41511384 0.41163307 0.41885634 0.42361947 0.43580214 0.4408532\n",
            " 0.44998691 0.44829889 0.47853965 0.47525516 0.49378434 0.50803456\n",
            " 0.51006281 0.52789846 0.53578906 0.54323476 0.54250197 0.52198379\n",
            " 0.52673382 0.54234495 0.55902906 0.57019106 0.59311698 0.62331852\n",
            " 0.60918607 0.60501177 0.6661345  0.68322426 0.65781209 0.6512562\n",
            " 0.64734363 0.69536772 0.72462706 0.72808167 0.71842451 0.70952633\n",
            " 0.72114633 0.73958387 0.81786181 0.83063335 1.         1.03885365\n",
            " 1.0942167  1.10354507 1.08989573 1.06222701 1.02755845 0.99292332\n",
            " 0.96389365 0.94309038 0.93260604 0.93207687 0.93984419 0.95372486\n",
            " 0.97124195 0.98994368 1.00768423 1.02280879 1.03352964 1.04018807\n",
            " 1.04279351 1.04211938 1.03932691 1.03565788 1.0322175  1.02982271\n",
            " 1.02893603 1.0296706  1.03185451 1.03512049]\n",
            "29 day output [[1.0390058]]\n",
            "[[1.038853645324707], [1.0942167043685913], [1.103545069694519], [1.0898957252502441], [1.0622270107269287], [1.027558445930481], [0.9929233193397522], [0.9638936519622803], [0.9430903792381287], [0.932606041431427], [0.9320768713951111], [0.9398441910743713], [0.9537248611450195], [0.9712419509887695], [0.9899436831474304], [1.0076842308044434], [1.0228087902069092], [1.0335296392440796], [1.0401880741119385], [1.0427935123443604], [1.0421193838119507], [1.0393269062042236], [1.0356578826904297], [1.0322175025939941], [1.0298227071762085], [1.0289360284805298], [1.0296705961227417], [1.031854510307312], [1.0351204872131348], [1.0390057563781738]]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "day_new=np.arange(1,101)\n",
        "day_pred=np.arange(101,131)"
      ],
      "metadata": {
        "id": "4VJEyqDPsdxc"
      },
      "execution_count": 121,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "len(df)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "WVeIZCWjswy0",
        "outputId": "959e917b-8770-4d50-d3f2-01c084e3c24d"
      },
      "execution_count": 122,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "2416"
            ]
          },
          "metadata": {},
          "execution_count": 122
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Graph of actual values in last 100 days**"
      ],
      "metadata": {
        "id": "2LQ4sU1M_lSY"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "plt.plot(day_new,scaler.inverse_transform(df[2316:]))\n",
        "plt.plot(day_pred,scaler.inverse_transform(lst_output))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 447
        },
        "id": "oHX8gPzxsy_e",
        "outputId": "c7dc452f-75fb-4f32-dd42-db90e056486c"
      },
      "execution_count": 127,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[<matplotlib.lines.Line2D at 0x7bedf7964790>]"
            ]
          },
          "metadata": {},
          "execution_count": 127
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df1=df.tolist()\n",
        "df1.extend(lst_output)\n",
        "plt.plot(df1[2366:])"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 447
        },
        "id": "-B4EQcn66PjJ",
        "outputId": "b3c3eb29-f401-4094-98a4-a1de38b99ed8"
      },
      "execution_count": 131,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[<matplotlib.lines.Line2D at 0x7bedf7c0d330>]"
            ]
          },
          "metadata": {},
          "execution_count": 131
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df1=scaler.inverse_transform(df1).tolist()\n",
        "plt.plot(df1)\n",
        "plt.plot(df)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 447
        },
        "id": "vgYQfwtu6pvc",
        "outputId": "d94631bc-4755-4b96-d4dd-eea677a9f901"
      },
      "execution_count": 132,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[<matplotlib.lines.Line2D at 0x7bedf42ed5a0>]"
            ]
          },
          "metadata": {},
          "execution_count": 132
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    }
  ]
}
